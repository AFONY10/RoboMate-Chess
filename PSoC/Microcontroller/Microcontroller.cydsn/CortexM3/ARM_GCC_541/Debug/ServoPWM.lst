ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ServoPWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ServoPWM_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	ServoPWM_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	ServoPWM_Enable, %function
  25              	ServoPWM_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\ServoPWM.c"
   1:Generated_Source\PSoC5/ServoPWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ServoPWM.c **** * File Name: ServoPWM.c
   3:Generated_Source\PSoC5/ServoPWM.c **** * Version 3.30
   4:Generated_Source\PSoC5/ServoPWM.c **** *
   5:Generated_Source\PSoC5/ServoPWM.c **** * Description:
   6:Generated_Source\PSoC5/ServoPWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/ServoPWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/ServoPWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/ServoPWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/ServoPWM.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/ServoPWM.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/ServoPWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/ServoPWM.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/ServoPWM.c **** *
  15:Generated_Source\PSoC5/ServoPWM.c **** * Note:
  16:Generated_Source\PSoC5/ServoPWM.c **** *
  17:Generated_Source\PSoC5/ServoPWM.c **** *******************************************************************************
  18:Generated_Source\PSoC5/ServoPWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/ServoPWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/ServoPWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/ServoPWM.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/ServoPWM.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/ServoPWM.c **** 
  24:Generated_Source\PSoC5/ServoPWM.c **** #include "ServoPWM.h"
  25:Generated_Source\PSoC5/ServoPWM.c **** 
  26:Generated_Source\PSoC5/ServoPWM.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/ServoPWM.c **** #ifdef ServoPWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/ServoPWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/ServoPWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/ServoPWM.c **** #endif /* ServoPWM_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 2


  31:Generated_Source\PSoC5/ServoPWM.c **** 
  32:Generated_Source\PSoC5/ServoPWM.c **** uint8 ServoPWM_initVar = 0u;
  33:Generated_Source\PSoC5/ServoPWM.c **** 
  34:Generated_Source\PSoC5/ServoPWM.c **** 
  35:Generated_Source\PSoC5/ServoPWM.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/ServoPWM.c **** * Function Name: ServoPWM_Start
  37:Generated_Source\PSoC5/ServoPWM.c **** ********************************************************************************
  38:Generated_Source\PSoC5/ServoPWM.c **** *
  39:Generated_Source\PSoC5/ServoPWM.c **** * Summary:
  40:Generated_Source\PSoC5/ServoPWM.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/ServoPWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/ServoPWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/ServoPWM.c **** *
  44:Generated_Source\PSoC5/ServoPWM.c **** * Parameters:
  45:Generated_Source\PSoC5/ServoPWM.c **** *  None
  46:Generated_Source\PSoC5/ServoPWM.c **** *
  47:Generated_Source\PSoC5/ServoPWM.c **** * Return:
  48:Generated_Source\PSoC5/ServoPWM.c **** *  None
  49:Generated_Source\PSoC5/ServoPWM.c **** *
  50:Generated_Source\PSoC5/ServoPWM.c **** * Global variables:
  51:Generated_Source\PSoC5/ServoPWM.c **** *  ServoPWM_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/ServoPWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/ServoPWM.c **** *
  54:Generated_Source\PSoC5/ServoPWM.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/ServoPWM.c **** void ServoPWM_Start(void) 
  56:Generated_Source\PSoC5/ServoPWM.c **** {
  57:Generated_Source\PSoC5/ServoPWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/ServoPWM.c ****     if(ServoPWM_initVar == 0u)
  59:Generated_Source\PSoC5/ServoPWM.c ****     {
  60:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_Init();
  61:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_initVar = 1u;
  62:Generated_Source\PSoC5/ServoPWM.c ****     }
  63:Generated_Source\PSoC5/ServoPWM.c ****     ServoPWM_Enable();
  64:Generated_Source\PSoC5/ServoPWM.c **** 
  65:Generated_Source\PSoC5/ServoPWM.c **** }
  66:Generated_Source\PSoC5/ServoPWM.c **** 
  67:Generated_Source\PSoC5/ServoPWM.c **** 
  68:Generated_Source\PSoC5/ServoPWM.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/ServoPWM.c **** * Function Name: ServoPWM_Init
  70:Generated_Source\PSoC5/ServoPWM.c **** ********************************************************************************
  71:Generated_Source\PSoC5/ServoPWM.c **** *
  72:Generated_Source\PSoC5/ServoPWM.c **** * Summary:
  73:Generated_Source\PSoC5/ServoPWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/ServoPWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/ServoPWM.c **** *  ServoPWM_Start().
  76:Generated_Source\PSoC5/ServoPWM.c **** *
  77:Generated_Source\PSoC5/ServoPWM.c **** * Parameters:
  78:Generated_Source\PSoC5/ServoPWM.c **** *  None
  79:Generated_Source\PSoC5/ServoPWM.c **** *
  80:Generated_Source\PSoC5/ServoPWM.c **** * Return:
  81:Generated_Source\PSoC5/ServoPWM.c **** *  None
  82:Generated_Source\PSoC5/ServoPWM.c **** *
  83:Generated_Source\PSoC5/ServoPWM.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/ServoPWM.c **** void ServoPWM_Init(void) 
  85:Generated_Source\PSoC5/ServoPWM.c **** {
  86:Generated_Source\PSoC5/ServoPWM.c ****     #if (ServoPWM_UsingFixedFunction || ServoPWM_UseControl)
  87:Generated_Source\PSoC5/ServoPWM.c ****         uint8 ctrl;
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 3


  88:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (ServoPWM_UsingFixedFunction || ServoPWM_UseControl) */
  89:Generated_Source\PSoC5/ServoPWM.c **** 
  90:Generated_Source\PSoC5/ServoPWM.c ****     #if(!ServoPWM_UsingFixedFunction)
  91:Generated_Source\PSoC5/ServoPWM.c ****         #if(ServoPWM_UseStatus)
  92:Generated_Source\PSoC5/ServoPWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/ServoPWM.c ****             uint8 ServoPWM_interruptState;
  94:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_UseStatus) */
  95:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (!ServoPWM_UsingFixedFunction) */
  96:Generated_Source\PSoC5/ServoPWM.c **** 
  97:Generated_Source\PSoC5/ServoPWM.c ****     #if (ServoPWM_UsingFixedFunction)
  98:Generated_Source\PSoC5/ServoPWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_CONTROL |= ServoPWM_CFG0_MODE;
 100:Generated_Source\PSoC5/ServoPWM.c ****         #if (ServoPWM_DeadBand2_4)
 101:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_CONTROL |= ServoPWM_CFG0_DB;
 102:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_DeadBand2_4) */
 103:Generated_Source\PSoC5/ServoPWM.c **** 
 104:Generated_Source\PSoC5/ServoPWM.c ****         ctrl = ServoPWM_CONTROL3 & ((uint8 )(~ServoPWM_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_CONTROL3 = ctrl | ServoPWM_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/ServoPWM.c **** 
 107:Generated_Source\PSoC5/ServoPWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_RT1 &= ((uint8)(~ServoPWM_RT1_MASK));
 109:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_RT1 |= ServoPWM_SYNC;
 110:Generated_Source\PSoC5/ServoPWM.c **** 
 111:Generated_Source\PSoC5/ServoPWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_RT1 &= ((uint8)(~ServoPWM_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_RT1 |= ServoPWM_SYNCDSI_EN;
 114:Generated_Source\PSoC5/ServoPWM.c **** 
 115:Generated_Source\PSoC5/ServoPWM.c ****     #elif (ServoPWM_UseControl)
 116:Generated_Source\PSoC5/ServoPWM.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/ServoPWM.c ****         ctrl = ServoPWM_CONTROL & ((uint8)(~ServoPWM_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/ServoPWM.c ****                 ((uint8)(~ServoPWM_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_CONTROL = ctrl | ServoPWM_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/ServoPWM.c ****                                    ServoPWM_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (ServoPWM_UsingFixedFunction) */
 122:Generated_Source\PSoC5/ServoPWM.c **** 
 123:Generated_Source\PSoC5/ServoPWM.c ****     #if (!ServoPWM_UsingFixedFunction)
 124:Generated_Source\PSoC5/ServoPWM.c ****         #if (ServoPWM_Resolution == 8)
 125:Generated_Source\PSoC5/ServoPWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_AUX_CONTROLDP0 |= (ServoPWM_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/ServoPWM.c ****         #else /* (ServoPWM_Resolution == 16)*/
 128:Generated_Source\PSoC5/ServoPWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_AUX_CONTROLDP0 |= (ServoPWM_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_AUX_CONTROLDP1 |= (ServoPWM_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_Resolution == 8) */
 132:Generated_Source\PSoC5/ServoPWM.c **** 
 133:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_WriteCounter(ServoPWM_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (!ServoPWM_UsingFixedFunction) */
 135:Generated_Source\PSoC5/ServoPWM.c **** 
 136:Generated_Source\PSoC5/ServoPWM.c ****     ServoPWM_WritePeriod(ServoPWM_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/ServoPWM.c **** 
 138:Generated_Source\PSoC5/ServoPWM.c ****         #if (ServoPWM_UseOneCompareMode)
 139:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_WriteCompare(ServoPWM_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/ServoPWM.c ****         #else
 141:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_WriteCompare1(ServoPWM_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_WriteCompare2(ServoPWM_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_UseOneCompareMode) */
 144:Generated_Source\PSoC5/ServoPWM.c **** 
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 4


 145:Generated_Source\PSoC5/ServoPWM.c ****         #if (ServoPWM_KillModeMinTime)
 146:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_WriteKillTime(ServoPWM_MinimumKillTime);
 147:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_KillModeMinTime) */
 148:Generated_Source\PSoC5/ServoPWM.c **** 
 149:Generated_Source\PSoC5/ServoPWM.c ****         #if (ServoPWM_DeadBandUsed)
 150:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_WriteDeadTime(ServoPWM_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_DeadBandUsed) */
 152:Generated_Source\PSoC5/ServoPWM.c **** 
 153:Generated_Source\PSoC5/ServoPWM.c ****     #if (ServoPWM_UseStatus || ServoPWM_UsingFixedFunction)
 154:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_SetInterruptMode(ServoPWM_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (ServoPWM_UseStatus || ServoPWM_UsingFixedFunction) */
 156:Generated_Source\PSoC5/ServoPWM.c **** 
 157:Generated_Source\PSoC5/ServoPWM.c ****     #if (ServoPWM_UsingFixedFunction)
 158:Generated_Source\PSoC5/ServoPWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_GLOBAL_ENABLE |= ServoPWM_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/ServoPWM.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_CONTROL2 |= ServoPWM_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/ServoPWM.c ****     #else
 163:Generated_Source\PSoC5/ServoPWM.c ****         #if(ServoPWM_UseStatus)
 164:Generated_Source\PSoC5/ServoPWM.c **** 
 165:Generated_Source\PSoC5/ServoPWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/ServoPWM.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/ServoPWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_STATUS_AUX_CTRL |= ServoPWM_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/ServoPWM.c **** 
 171:Generated_Source\PSoC5/ServoPWM.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/ServoPWM.c ****             CyExitCriticalSection(ServoPWM_interruptState);
 173:Generated_Source\PSoC5/ServoPWM.c **** 
 174:Generated_Source\PSoC5/ServoPWM.c ****             /* Clear the FIFO to enable the ServoPWM_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/ServoPWM.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_ClearFIFO();
 177:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_UseStatus) */
 178:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (ServoPWM_UsingFixedFunction) */
 179:Generated_Source\PSoC5/ServoPWM.c **** }
 180:Generated_Source\PSoC5/ServoPWM.c **** 
 181:Generated_Source\PSoC5/ServoPWM.c **** 
 182:Generated_Source\PSoC5/ServoPWM.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/ServoPWM.c **** * Function Name: ServoPWM_Enable
 184:Generated_Source\PSoC5/ServoPWM.c **** ********************************************************************************
 185:Generated_Source\PSoC5/ServoPWM.c **** *
 186:Generated_Source\PSoC5/ServoPWM.c **** * Summary:
 187:Generated_Source\PSoC5/ServoPWM.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/ServoPWM.c **** *
 189:Generated_Source\PSoC5/ServoPWM.c **** * Parameters:
 190:Generated_Source\PSoC5/ServoPWM.c **** *  None
 191:Generated_Source\PSoC5/ServoPWM.c **** *
 192:Generated_Source\PSoC5/ServoPWM.c **** * Return:
 193:Generated_Source\PSoC5/ServoPWM.c **** *  None
 194:Generated_Source\PSoC5/ServoPWM.c **** *
 195:Generated_Source\PSoC5/ServoPWM.c **** * Side Effects:
 196:Generated_Source\PSoC5/ServoPWM.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/ServoPWM.c **** *
 198:Generated_Source\PSoC5/ServoPWM.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/ServoPWM.c **** void ServoPWM_Enable(void) 
 200:Generated_Source\PSoC5/ServoPWM.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/ServoPWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/ServoPWM.c ****     #if (ServoPWM_UsingFixedFunction)
 203:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_GLOBAL_ENABLE |= ServoPWM_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_GLOBAL_STBY_ENABLE |= ServoPWM_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (ServoPWM_UsingFixedFunction) */
 206:Generated_Source\PSoC5/ServoPWM.c **** 
 207:Generated_Source\PSoC5/ServoPWM.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/ServoPWM.c ****     #if (ServoPWM_UseControl || ServoPWM_UsingFixedFunction)
 209:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_CONTROL |= ServoPWM_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7B650040 		.word	1073767803
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	ServoPWM_Enable, .-ServoPWM_Enable
  46              		.section	.text.ServoPWM_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	ServoPWM_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	ServoPWM_Stop, %function
  52              	ServoPWM_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (ServoPWM_UseControl || ServoPWM_UsingFixedFunction) */
 211:Generated_Source\PSoC5/ServoPWM.c **** }
 212:Generated_Source\PSoC5/ServoPWM.c **** 
 213:Generated_Source\PSoC5/ServoPWM.c **** 
 214:Generated_Source\PSoC5/ServoPWM.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/ServoPWM.c **** * Function Name: ServoPWM_Stop
 216:Generated_Source\PSoC5/ServoPWM.c **** ********************************************************************************
 217:Generated_Source\PSoC5/ServoPWM.c **** *
 218:Generated_Source\PSoC5/ServoPWM.c **** * Summary:
 219:Generated_Source\PSoC5/ServoPWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/ServoPWM.c **** *  interrupts.
 221:Generated_Source\PSoC5/ServoPWM.c **** *
 222:Generated_Source\PSoC5/ServoPWM.c **** * Parameters:
 223:Generated_Source\PSoC5/ServoPWM.c **** *  None
 224:Generated_Source\PSoC5/ServoPWM.c **** *
 225:Generated_Source\PSoC5/ServoPWM.c **** * Return:
 226:Generated_Source\PSoC5/ServoPWM.c **** *  None
 227:Generated_Source\PSoC5/ServoPWM.c **** *
 228:Generated_Source\PSoC5/ServoPWM.c **** * Side Effects:
 229:Generated_Source\PSoC5/ServoPWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/ServoPWM.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/ServoPWM.c **** *
 232:Generated_Source\PSoC5/ServoPWM.c **** *******************************************************************************/
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 6


 233:Generated_Source\PSoC5/ServoPWM.c **** void ServoPWM_Stop(void) 
 234:Generated_Source\PSoC5/ServoPWM.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/ServoPWM.c ****     #if (ServoPWM_UseControl || ServoPWM_UsingFixedFunction)
 236:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_CONTROL &= ((uint8)(~ServoPWM_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7B650040 		.word	1073767803
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	ServoPWM_Stop, .-ServoPWM_Stop
  72              		.section	.text.ServoPWM_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	ServoPWM_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	ServoPWM_WriteCounter, %function
  78              	ServoPWM_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (ServoPWM_UseControl || ServoPWM_UsingFixedFunction) */
 238:Generated_Source\PSoC5/ServoPWM.c **** 
 239:Generated_Source\PSoC5/ServoPWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/ServoPWM.c ****     #if (ServoPWM_UsingFixedFunction)
 241:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_GLOBAL_ENABLE &= ((uint8)(~ServoPWM_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_GLOBAL_STBY_ENABLE &= ((uint8)(~ServoPWM_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (ServoPWM_UsingFixedFunction) */
 244:Generated_Source\PSoC5/ServoPWM.c **** }
 245:Generated_Source\PSoC5/ServoPWM.c **** 
 246:Generated_Source\PSoC5/ServoPWM.c **** #if (ServoPWM_UseOneCompareMode)
 247:Generated_Source\PSoC5/ServoPWM.c ****     #if (ServoPWM_CompareMode1SW)
 248:Generated_Source\PSoC5/ServoPWM.c **** 
 249:Generated_Source\PSoC5/ServoPWM.c **** 
 250:Generated_Source\PSoC5/ServoPWM.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/ServoPWM.c ****         * Function Name: ServoPWM_SetCompareMode
 252:Generated_Source\PSoC5/ServoPWM.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/ServoPWM.c ****         *
 254:Generated_Source\PSoC5/ServoPWM.c ****         * Summary:
 255:Generated_Source\PSoC5/ServoPWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/ServoPWM.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/ServoPWM.c ****         *
 258:Generated_Source\PSoC5/ServoPWM.c ****         * Parameters:
 259:Generated_Source\PSoC5/ServoPWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/ServoPWM.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/ServoPWM.c ****         *
 262:Generated_Source\PSoC5/ServoPWM.c ****         * Return:
 263:Generated_Source\PSoC5/ServoPWM.c ****         *  None
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 7


 264:Generated_Source\PSoC5/ServoPWM.c ****         *
 265:Generated_Source\PSoC5/ServoPWM.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/ServoPWM.c ****         void ServoPWM_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/ServoPWM.c ****         {
 268:Generated_Source\PSoC5/ServoPWM.c ****             #if(ServoPWM_UsingFixedFunction)
 269:Generated_Source\PSoC5/ServoPWM.c **** 
 270:Generated_Source\PSoC5/ServoPWM.c ****                 #if(0 != ServoPWM_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/ServoPWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << ServoPWM_CTRL_CMPMODE1
 272:Generated_Source\PSoC5/ServoPWM.c ****                 #else
 273:Generated_Source\PSoC5/ServoPWM.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/ServoPWM.c ****                 #endif /* (0 != ServoPWM_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/ServoPWM.c **** 
 276:Generated_Source\PSoC5/ServoPWM.c ****                 ServoPWM_CONTROL3 &= ((uint8)(~ServoPWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data
 277:Generated_Source\PSoC5/ServoPWM.c ****                 ServoPWM_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/ServoPWM.c **** 
 279:Generated_Source\PSoC5/ServoPWM.c ****             #elif (ServoPWM_UseControl)
 280:Generated_Source\PSoC5/ServoPWM.c **** 
 281:Generated_Source\PSoC5/ServoPWM.c ****                 #if(0 != ServoPWM_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/ServoPWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << ServoPWM_CTRL_CMPMODE
 283:Generated_Source\PSoC5/ServoPWM.c ****                                                 ServoPWM_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/ServoPWM.c ****                 #else
 285:Generated_Source\PSoC5/ServoPWM.c ****                     uint8 comparemode1masked = comparemode & ServoPWM_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/ServoPWM.c ****                 #endif /* (0 != ServoPWM_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/ServoPWM.c **** 
 288:Generated_Source\PSoC5/ServoPWM.c ****                 #if(0 != ServoPWM_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/ServoPWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << ServoPWM_CTRL_CMPMODE
 290:Generated_Source\PSoC5/ServoPWM.c ****                                                ServoPWM_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/ServoPWM.c ****                 #else
 292:Generated_Source\PSoC5/ServoPWM.c ****                     uint8 comparemode2masked = comparemode & ServoPWM_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/ServoPWM.c ****                 #endif /* (0 != ServoPWM_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/ServoPWM.c **** 
 295:Generated_Source\PSoC5/ServoPWM.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/ServoPWM.c ****                 ServoPWM_CONTROL &= ((uint8)(~(ServoPWM_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/ServoPWM.c ****                                             ServoPWM_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/ServoPWM.c ****                 ServoPWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/ServoPWM.c **** 
 300:Generated_Source\PSoC5/ServoPWM.c ****             #else
 301:Generated_Source\PSoC5/ServoPWM.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/ServoPWM.c ****             #endif /* (ServoPWM_UsingFixedFunction) */
 303:Generated_Source\PSoC5/ServoPWM.c ****         }
 304:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* ServoPWM_CompareMode1SW */
 305:Generated_Source\PSoC5/ServoPWM.c **** 
 306:Generated_Source\PSoC5/ServoPWM.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/ServoPWM.c **** 
 308:Generated_Source\PSoC5/ServoPWM.c ****     #if (ServoPWM_CompareMode1SW)
 309:Generated_Source\PSoC5/ServoPWM.c **** 
 310:Generated_Source\PSoC5/ServoPWM.c **** 
 311:Generated_Source\PSoC5/ServoPWM.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/ServoPWM.c ****         * Function Name: ServoPWM_SetCompareMode1
 313:Generated_Source\PSoC5/ServoPWM.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/ServoPWM.c ****         *
 315:Generated_Source\PSoC5/ServoPWM.c ****         * Summary:
 316:Generated_Source\PSoC5/ServoPWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/ServoPWM.c ****         *
 318:Generated_Source\PSoC5/ServoPWM.c ****         * Parameters:
 319:Generated_Source\PSoC5/ServoPWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/ServoPWM.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 8


 321:Generated_Source\PSoC5/ServoPWM.c ****         *
 322:Generated_Source\PSoC5/ServoPWM.c ****         * Return:
 323:Generated_Source\PSoC5/ServoPWM.c ****         *  None
 324:Generated_Source\PSoC5/ServoPWM.c ****         *
 325:Generated_Source\PSoC5/ServoPWM.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/ServoPWM.c ****         void ServoPWM_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/ServoPWM.c ****         {
 328:Generated_Source\PSoC5/ServoPWM.c ****             #if(0 != ServoPWM_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/ServoPWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << ServoPWM_CTRL_CMPMODE1_SHI
 330:Generated_Source\PSoC5/ServoPWM.c ****                                            ServoPWM_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/ServoPWM.c ****             #else
 332:Generated_Source\PSoC5/ServoPWM.c ****                 uint8 comparemodemasked = comparemode & ServoPWM_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/ServoPWM.c ****             #endif /* (0 != ServoPWM_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/ServoPWM.c **** 
 335:Generated_Source\PSoC5/ServoPWM.c ****             #if (ServoPWM_UseControl)
 336:Generated_Source\PSoC5/ServoPWM.c ****                 ServoPWM_CONTROL &= ((uint8)(~ServoPWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode 
 337:Generated_Source\PSoC5/ServoPWM.c ****                 ServoPWM_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/ServoPWM.c ****             #endif /* (ServoPWM_UseControl) */
 339:Generated_Source\PSoC5/ServoPWM.c ****         }
 340:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* ServoPWM_CompareMode1SW */
 341:Generated_Source\PSoC5/ServoPWM.c **** 
 342:Generated_Source\PSoC5/ServoPWM.c **** #if (ServoPWM_CompareMode2SW)
 343:Generated_Source\PSoC5/ServoPWM.c **** 
 344:Generated_Source\PSoC5/ServoPWM.c **** 
 345:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_SetCompareMode2
 347:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/ServoPWM.c ****     *
 349:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 350:Generated_Source\PSoC5/ServoPWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/ServoPWM.c ****     *
 352:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 353:Generated_Source\PSoC5/ServoPWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/ServoPWM.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/ServoPWM.c ****     *
 356:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 357:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 358:Generated_Source\PSoC5/ServoPWM.c ****     *
 359:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/ServoPWM.c ****     void ServoPWM_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/ServoPWM.c ****     {
 362:Generated_Source\PSoC5/ServoPWM.c **** 
 363:Generated_Source\PSoC5/ServoPWM.c ****         #if(0 != ServoPWM_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/ServoPWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << ServoPWM_CTRL_CMPMODE2_SHIFT))
 365:Generated_Source\PSoC5/ServoPWM.c ****                                                  ServoPWM_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/ServoPWM.c ****         #else
 367:Generated_Source\PSoC5/ServoPWM.c ****             uint8 comparemodemasked = comparemode & ServoPWM_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (0 != ServoPWM_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/ServoPWM.c **** 
 370:Generated_Source\PSoC5/ServoPWM.c ****         #if (ServoPWM_UseControl)
 371:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_CONTROL &= ((uint8)(~ServoPWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_UseControl) */
 374:Generated_Source\PSoC5/ServoPWM.c ****     }
 375:Generated_Source\PSoC5/ServoPWM.c ****     #endif /*ServoPWM_CompareMode2SW */
 376:Generated_Source\PSoC5/ServoPWM.c **** 
 377:Generated_Source\PSoC5/ServoPWM.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 9


 378:Generated_Source\PSoC5/ServoPWM.c **** 
 379:Generated_Source\PSoC5/ServoPWM.c **** 
 380:Generated_Source\PSoC5/ServoPWM.c **** #if (!ServoPWM_UsingFixedFunction)
 381:Generated_Source\PSoC5/ServoPWM.c **** 
 382:Generated_Source\PSoC5/ServoPWM.c **** 
 383:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_WriteCounter
 385:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/ServoPWM.c ****     *
 387:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 388:Generated_Source\PSoC5/ServoPWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/ServoPWM.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/ServoPWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/ServoPWM.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/ServoPWM.c ****     *
 393:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 394:Generated_Source\PSoC5/ServoPWM.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/ServoPWM.c ****     *
 396:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 397:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 398:Generated_Source\PSoC5/ServoPWM.c ****     *
 399:Generated_Source\PSoC5/ServoPWM.c ****     * Side Effects:
 400:Generated_Source\PSoC5/ServoPWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/ServoPWM.c ****     *
 402:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/ServoPWM.c ****     void ServoPWM_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/ServoPWM.c ****                                        
 405:Generated_Source\PSoC5/ServoPWM.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/ServoPWM.c ****         CY_SET_REG16(ServoPWM_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1880     		strh	r0, [r3]	@ movhi
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 146A0040 		.word	1073768980
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	ServoPWM_WriteCounter, .-ServoPWM_WriteCounter
  97              		.section	.text.ServoPWM_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	ServoPWM_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	ServoPWM_ReadCounter, %function
 103              	ServoPWM_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/ServoPWM.c ****     }
 408:Generated_Source\PSoC5/ServoPWM.c **** 
 409:Generated_Source\PSoC5/ServoPWM.c **** 
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 10


 410:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_ReadCounter
 412:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/ServoPWM.c ****     *
 414:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 415:Generated_Source\PSoC5/ServoPWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/ServoPWM.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/ServoPWM.c ****     *
 418:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 419:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 420:Generated_Source\PSoC5/ServoPWM.c ****     *
 421:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 422:Generated_Source\PSoC5/ServoPWM.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/ServoPWM.c ****     *
 424:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/ServoPWM.c ****     uint16 ServoPWM_ReadCounter(void) 
 426:Generated_Source\PSoC5/ServoPWM.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/ServoPWM.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/ServoPWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/ServoPWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/ServoPWM.c ****           (void)CY_GET_REG8(ServoPWM_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/ServoPWM.c **** 
 432:Generated_Source\PSoC5/ServoPWM.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/ServoPWM.c ****         return (CY_GET_REG16(ServoPWM_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1888     		ldrh	r0, [r3]
 434:Generated_Source\PSoC5/ServoPWM.c ****     }
 116              		.loc 1 434 0
 117 0008 80B2     		uxth	r0, r0
 118 000a 7047     		bx	lr
 119              	.L12:
 120              		.align	2
 121              	.L11:
 122 000c 1A650040 		.word	1073767706
 123 0010 B46A0040 		.word	1073769140
 124              		.cfi_endproc
 125              	.LFE5:
 126              		.size	ServoPWM_ReadCounter, .-ServoPWM_ReadCounter
 127              		.section	.text.ServoPWM_WritePeriod,"ax",%progbits
 128              		.align	2
 129              		.global	ServoPWM_WritePeriod
 130              		.thumb
 131              		.thumb_func
 132              		.type	ServoPWM_WritePeriod, %function
 133              	ServoPWM_WritePeriod:
 134              	.LFB6:
 435:Generated_Source\PSoC5/ServoPWM.c **** 
 436:Generated_Source\PSoC5/ServoPWM.c ****     #if (ServoPWM_UseStatus)
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 11


 437:Generated_Source\PSoC5/ServoPWM.c **** 
 438:Generated_Source\PSoC5/ServoPWM.c **** 
 439:Generated_Source\PSoC5/ServoPWM.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/ServoPWM.c ****         * Function Name: ServoPWM_ClearFIFO
 441:Generated_Source\PSoC5/ServoPWM.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/ServoPWM.c ****         *
 443:Generated_Source\PSoC5/ServoPWM.c ****         * Summary:
 444:Generated_Source\PSoC5/ServoPWM.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/ServoPWM.c ****         *
 446:Generated_Source\PSoC5/ServoPWM.c ****         * Parameters:
 447:Generated_Source\PSoC5/ServoPWM.c ****         *  None
 448:Generated_Source\PSoC5/ServoPWM.c ****         *
 449:Generated_Source\PSoC5/ServoPWM.c ****         * Return:
 450:Generated_Source\PSoC5/ServoPWM.c ****         *  None
 451:Generated_Source\PSoC5/ServoPWM.c ****         *
 452:Generated_Source\PSoC5/ServoPWM.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/ServoPWM.c ****         void ServoPWM_ClearFIFO(void) 
 454:Generated_Source\PSoC5/ServoPWM.c ****         {
 455:Generated_Source\PSoC5/ServoPWM.c ****             while(0u != (ServoPWM_ReadStatusRegister() & ServoPWM_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/ServoPWM.c ****             {
 457:Generated_Source\PSoC5/ServoPWM.c ****                 (void)ServoPWM_ReadCapture();
 458:Generated_Source\PSoC5/ServoPWM.c ****             }
 459:Generated_Source\PSoC5/ServoPWM.c ****         }
 460:Generated_Source\PSoC5/ServoPWM.c **** 
 461:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* ServoPWM_UseStatus */
 462:Generated_Source\PSoC5/ServoPWM.c **** 
 463:Generated_Source\PSoC5/ServoPWM.c **** #endif /* !ServoPWM_UsingFixedFunction */
 464:Generated_Source\PSoC5/ServoPWM.c **** 
 465:Generated_Source\PSoC5/ServoPWM.c **** 
 466:Generated_Source\PSoC5/ServoPWM.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/ServoPWM.c **** * Function Name: ServoPWM_WritePeriod
 468:Generated_Source\PSoC5/ServoPWM.c **** ********************************************************************************
 469:Generated_Source\PSoC5/ServoPWM.c **** *
 470:Generated_Source\PSoC5/ServoPWM.c **** * Summary:
 471:Generated_Source\PSoC5/ServoPWM.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/ServoPWM.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/ServoPWM.c **** *
 474:Generated_Source\PSoC5/ServoPWM.c **** * Parameters:
 475:Generated_Source\PSoC5/ServoPWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/ServoPWM.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/ServoPWM.c **** *
 478:Generated_Source\PSoC5/ServoPWM.c **** * Return:
 479:Generated_Source\PSoC5/ServoPWM.c **** *  None
 480:Generated_Source\PSoC5/ServoPWM.c **** *
 481:Generated_Source\PSoC5/ServoPWM.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/ServoPWM.c **** void ServoPWM_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/ServoPWM.c **** {
 135              		.loc 1 483 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL1:
 484:Generated_Source\PSoC5/ServoPWM.c ****     #if(ServoPWM_UsingFixedFunction)
 485:Generated_Source\PSoC5/ServoPWM.c ****         CY_SET_REG16(ServoPWM_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/ServoPWM.c ****     #else
 487:Generated_Source\PSoC5/ServoPWM.c ****         CY_SET_REG16(ServoPWM_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 12


 141              		.loc 1 487 0
 142 0000 014B     		ldr	r3, .L14
 143 0002 1880     		strh	r0, [r3]	@ movhi
 144 0004 7047     		bx	lr
 145              	.L15:
 146 0006 00BF     		.align	2
 147              	.L14:
 148 0008 946A0040 		.word	1073769108
 149              		.cfi_endproc
 150              	.LFE6:
 151              		.size	ServoPWM_WritePeriod, .-ServoPWM_WritePeriod
 152              		.section	.text.ServoPWM_WriteCompare,"ax",%progbits
 153              		.align	2
 154              		.global	ServoPWM_WriteCompare
 155              		.thumb
 156              		.thumb_func
 157              		.type	ServoPWM_WriteCompare, %function
 158              	ServoPWM_WriteCompare:
 159              	.LFB7:
 488:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (ServoPWM_UsingFixedFunction) */
 489:Generated_Source\PSoC5/ServoPWM.c **** }
 490:Generated_Source\PSoC5/ServoPWM.c **** 
 491:Generated_Source\PSoC5/ServoPWM.c **** #if (ServoPWM_UseOneCompareMode)
 492:Generated_Source\PSoC5/ServoPWM.c **** 
 493:Generated_Source\PSoC5/ServoPWM.c **** 
 494:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_WriteCompare
 496:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/ServoPWM.c ****     *
 498:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 499:Generated_Source\PSoC5/ServoPWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/ServoPWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/ServoPWM.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/ServoPWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/ServoPWM.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/ServoPWM.c ****     *
 505:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 506:Generated_Source\PSoC5/ServoPWM.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/ServoPWM.c ****     *
 508:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 509:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 510:Generated_Source\PSoC5/ServoPWM.c ****     *
 511:Generated_Source\PSoC5/ServoPWM.c ****     * Side Effects:
 512:Generated_Source\PSoC5/ServoPWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/ServoPWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/ServoPWM.c ****     *
 515:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/ServoPWM.c ****     void ServoPWM_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/ServoPWM.c ****                                        
 518:Generated_Source\PSoC5/ServoPWM.c ****     {
 160              		.loc 1 518 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165              	.LVL2:
 519:Generated_Source\PSoC5/ServoPWM.c ****         #if(ServoPWM_UsingFixedFunction)
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 13


 520:Generated_Source\PSoC5/ServoPWM.c ****             CY_SET_REG16(ServoPWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/ServoPWM.c ****         #else
 522:Generated_Source\PSoC5/ServoPWM.c ****             CY_SET_REG16(ServoPWM_COMPARE1_LSB_PTR, compare);
 166              		.loc 1 522 0
 167 0000 014B     		ldr	r3, .L17
 168 0002 1880     		strh	r0, [r3]	@ movhi
 169 0004 7047     		bx	lr
 170              	.L18:
 171 0006 00BF     		.align	2
 172              	.L17:
 173 0008 546A0040 		.word	1073769044
 174              		.cfi_endproc
 175              	.LFE7:
 176              		.size	ServoPWM_WriteCompare, .-ServoPWM_WriteCompare
 177              		.section	.text.ServoPWM_Init,"ax",%progbits
 178              		.align	2
 179              		.global	ServoPWM_Init
 180              		.thumb
 181              		.thumb_func
 182              		.type	ServoPWM_Init, %function
 183              	ServoPWM_Init:
 184              	.LFB1:
  85:Generated_Source\PSoC5/ServoPWM.c ****     #if (ServoPWM_UsingFixedFunction || ServoPWM_UseControl)
 185              		.loc 1 85 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 08B5     		push	{r3, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/ServoPWM.c ****                 ((uint8)(~ServoPWM_CTRL_CMPMODE1_MASK));
 193              		.loc 1 117 0
 194 0002 0F4A     		ldr	r2, .L21
 195 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 196 0006 03F0C003 		and	r3, r3, #192
 197              	.LVL3:
 119:Generated_Source\PSoC5/ServoPWM.c ****                                    ServoPWM_DEFAULT_COMPARE1_MODE;
 198              		.loc 1 119 0
 199 000a 43F00903 		orr	r3, r3, #9
 200              	.LVL4:
 201 000e 1370     		strb	r3, [r2]
 129:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_AUX_CONTROLDP1 |= (ServoPWM_AUX_CTRL_FIFO0_CLR);
 202              		.loc 1 129 0
 203 0010 1F32     		adds	r2, r2, #31
 204 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 205 0014 43F00103 		orr	r3, r3, #1
 206 0018 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_Resolution == 8) */
 207              		.loc 1 130 0
 208 001a 0132     		adds	r2, r2, #1
 209 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 210 001e 43F00103 		orr	r3, r3, #1
 211 0022 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (!ServoPWM_UsingFixedFunction) */
 212              		.loc 1 133 0
 213 0024 44F61F60 		movw	r0, #19999
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 14


 214 0028 FFF7FEFF 		bl	ServoPWM_WriteCounter
 215              	.LVL5:
 136:Generated_Source\PSoC5/ServoPWM.c **** 
 216              		.loc 1 136 0
 217 002c 44F61F60 		movw	r0, #19999
 218 0030 FFF7FEFF 		bl	ServoPWM_WritePeriod
 219              	.LVL6:
 139:Generated_Source\PSoC5/ServoPWM.c ****         #else
 220              		.loc 1 139 0
 221 0034 40F2DC50 		movw	r0, #1500
 222 0038 FFF7FEFF 		bl	ServoPWM_WriteCompare
 223              	.LVL7:
 224 003c 08BD     		pop	{r3, pc}
 225              	.L22:
 226 003e 00BF     		.align	2
 227              	.L21:
 228 0040 7B650040 		.word	1073767803
 229              		.cfi_endproc
 230              	.LFE1:
 231              		.size	ServoPWM_Init, .-ServoPWM_Init
 232              		.section	.text.ServoPWM_Start,"ax",%progbits
 233              		.align	2
 234              		.global	ServoPWM_Start
 235              		.thumb
 236              		.thumb_func
 237              		.type	ServoPWM_Start, %function
 238              	ServoPWM_Start:
 239              	.LFB0:
  56:Generated_Source\PSoC5/ServoPWM.c ****     /* If not Initialized then initialize all required hardware and software */
 240              		.loc 1 56 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 08B5     		push	{r3, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/ServoPWM.c ****     {
 248              		.loc 1 58 0
 249 0002 054B     		ldr	r3, .L26
 250 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 251 0006 23B9     		cbnz	r3, .L24
  60:Generated_Source\PSoC5/ServoPWM.c ****         ServoPWM_initVar = 1u;
 252              		.loc 1 60 0
 253 0008 FFF7FEFF 		bl	ServoPWM_Init
 254              	.LVL8:
  61:Generated_Source\PSoC5/ServoPWM.c ****     }
 255              		.loc 1 61 0
 256 000c 0122     		movs	r2, #1
 257 000e 024B     		ldr	r3, .L26
 258 0010 1A70     		strb	r2, [r3]
 259              	.L24:
  63:Generated_Source\PSoC5/ServoPWM.c **** 
 260              		.loc 1 63 0
 261 0012 FFF7FEFF 		bl	ServoPWM_Enable
 262              	.LVL9:
 263 0016 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 15


 264              	.L27:
 265              		.align	2
 266              	.L26:
 267 0018 00000000 		.word	.LANCHOR0
 268              		.cfi_endproc
 269              	.LFE0:
 270              		.size	ServoPWM_Start, .-ServoPWM_Start
 271              		.section	.text.ServoPWM_ReadControlRegister,"ax",%progbits
 272              		.align	2
 273              		.global	ServoPWM_ReadControlRegister
 274              		.thumb
 275              		.thumb_func
 276              		.type	ServoPWM_ReadControlRegister, %function
 277              	ServoPWM_ReadControlRegister:
 278              	.LFB8:
 523:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_UsingFixedFunction) */
 524:Generated_Source\PSoC5/ServoPWM.c **** 
 525:Generated_Source\PSoC5/ServoPWM.c ****         #if (ServoPWM_PWMMode == ServoPWM__B_PWM__DITHER)
 526:Generated_Source\PSoC5/ServoPWM.c ****             #if(ServoPWM_UsingFixedFunction)
 527:Generated_Source\PSoC5/ServoPWM.c ****                 CY_SET_REG16(ServoPWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/ServoPWM.c ****             #else
 529:Generated_Source\PSoC5/ServoPWM.c ****                 CY_SET_REG16(ServoPWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/ServoPWM.c ****             #endif /* (ServoPWM_UsingFixedFunction) */
 531:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_PWMMode == ServoPWM__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/ServoPWM.c ****     }
 533:Generated_Source\PSoC5/ServoPWM.c **** 
 534:Generated_Source\PSoC5/ServoPWM.c **** 
 535:Generated_Source\PSoC5/ServoPWM.c **** #else
 536:Generated_Source\PSoC5/ServoPWM.c **** 
 537:Generated_Source\PSoC5/ServoPWM.c **** 
 538:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_WriteCompare1
 540:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/ServoPWM.c ****     *
 542:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 543:Generated_Source\PSoC5/ServoPWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/ServoPWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/ServoPWM.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/ServoPWM.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/ServoPWM.c ****     *
 548:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 549:Generated_Source\PSoC5/ServoPWM.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/ServoPWM.c ****     *
 551:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 552:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 553:Generated_Source\PSoC5/ServoPWM.c ****     *
 554:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/ServoPWM.c ****     void ServoPWM_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/ServoPWM.c ****                                         
 557:Generated_Source\PSoC5/ServoPWM.c ****     {
 558:Generated_Source\PSoC5/ServoPWM.c ****         #if(ServoPWM_UsingFixedFunction)
 559:Generated_Source\PSoC5/ServoPWM.c ****             CY_SET_REG16(ServoPWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/ServoPWM.c ****         #else
 561:Generated_Source\PSoC5/ServoPWM.c ****             CY_SET_REG16(ServoPWM_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_UsingFixedFunction) */
 563:Generated_Source\PSoC5/ServoPWM.c ****     }
 564:Generated_Source\PSoC5/ServoPWM.c **** 
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 16


 565:Generated_Source\PSoC5/ServoPWM.c **** 
 566:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_WriteCompare2
 568:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/ServoPWM.c ****     *
 570:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 571:Generated_Source\PSoC5/ServoPWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/ServoPWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/ServoPWM.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/ServoPWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/ServoPWM.c ****     *  mode.
 576:Generated_Source\PSoC5/ServoPWM.c ****     *
 577:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 578:Generated_Source\PSoC5/ServoPWM.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/ServoPWM.c ****     *
 580:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 581:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 582:Generated_Source\PSoC5/ServoPWM.c ****     *
 583:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/ServoPWM.c ****     void ServoPWM_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/ServoPWM.c ****                                         
 586:Generated_Source\PSoC5/ServoPWM.c ****     {
 587:Generated_Source\PSoC5/ServoPWM.c ****         #if(ServoPWM_UsingFixedFunction)
 588:Generated_Source\PSoC5/ServoPWM.c ****             CY_SET_REG16(ServoPWM_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/ServoPWM.c ****         #else
 590:Generated_Source\PSoC5/ServoPWM.c ****             CY_SET_REG16(ServoPWM_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_UsingFixedFunction) */
 592:Generated_Source\PSoC5/ServoPWM.c ****     }
 593:Generated_Source\PSoC5/ServoPWM.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/ServoPWM.c **** 
 595:Generated_Source\PSoC5/ServoPWM.c **** #if (ServoPWM_DeadBandUsed)
 596:Generated_Source\PSoC5/ServoPWM.c **** 
 597:Generated_Source\PSoC5/ServoPWM.c **** 
 598:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_WriteDeadTime
 600:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/ServoPWM.c ****     *
 602:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 603:Generated_Source\PSoC5/ServoPWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/ServoPWM.c ****     *
 605:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 606:Generated_Source\PSoC5/ServoPWM.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/ServoPWM.c ****     *
 608:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 609:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 610:Generated_Source\PSoC5/ServoPWM.c ****     *
 611:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/ServoPWM.c ****     void ServoPWM_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/ServoPWM.c ****     {
 614:Generated_Source\PSoC5/ServoPWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/ServoPWM.c ****         #if(!ServoPWM_DeadBand2_4)
 616:Generated_Source\PSoC5/ServoPWM.c ****             CY_SET_REG8(ServoPWM_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/ServoPWM.c ****         #else
 618:Generated_Source\PSoC5/ServoPWM.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/ServoPWM.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/ServoPWM.c ****             ServoPWM_DEADBAND_COUNT &= ((uint8)(~ServoPWM_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/ServoPWM.c **** 
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 17


 622:Generated_Source\PSoC5/ServoPWM.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/ServoPWM.c ****             #if(ServoPWM_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/ServoPWM.c ****                 ServoPWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << ServoPWM_DEADBAND_COUNT_SHIF
 625:Generated_Source\PSoC5/ServoPWM.c ****                                                     ServoPWM_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/ServoPWM.c ****             #else
 627:Generated_Source\PSoC5/ServoPWM.c ****                 ServoPWM_DEADBAND_COUNT |= deadtime & ServoPWM_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/ServoPWM.c ****             #endif /* (ServoPWM_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/ServoPWM.c **** 
 630:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (!ServoPWM_DeadBand2_4) */
 631:Generated_Source\PSoC5/ServoPWM.c ****     }
 632:Generated_Source\PSoC5/ServoPWM.c **** 
 633:Generated_Source\PSoC5/ServoPWM.c **** 
 634:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_ReadDeadTime
 636:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/ServoPWM.c ****     *
 638:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 639:Generated_Source\PSoC5/ServoPWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/ServoPWM.c ****     *
 641:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 642:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 643:Generated_Source\PSoC5/ServoPWM.c ****     *
 644:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 645:Generated_Source\PSoC5/ServoPWM.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/ServoPWM.c ****     *
 647:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/ServoPWM.c ****     uint8 ServoPWM_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/ServoPWM.c ****     {
 650:Generated_Source\PSoC5/ServoPWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/ServoPWM.c ****         #if(!ServoPWM_DeadBand2_4)
 652:Generated_Source\PSoC5/ServoPWM.c ****             return (CY_GET_REG8(ServoPWM_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/ServoPWM.c ****         #else
 654:Generated_Source\PSoC5/ServoPWM.c **** 
 655:Generated_Source\PSoC5/ServoPWM.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/ServoPWM.c ****             #if(ServoPWM_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/ServoPWM.c ****                 return ((uint8)(((uint8)(ServoPWM_DEADBAND_COUNT & ServoPWM_DEADBAND_COUNT_MASK)) >
 658:Generated_Source\PSoC5/ServoPWM.c ****                                                                            ServoPWM_DEADBAND_COUNT_
 659:Generated_Source\PSoC5/ServoPWM.c ****             #else
 660:Generated_Source\PSoC5/ServoPWM.c ****                 return (ServoPWM_DEADBAND_COUNT & ServoPWM_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/ServoPWM.c ****             #endif /* (ServoPWM_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (!ServoPWM_DeadBand2_4) */
 663:Generated_Source\PSoC5/ServoPWM.c ****     }
 664:Generated_Source\PSoC5/ServoPWM.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/ServoPWM.c **** 
 666:Generated_Source\PSoC5/ServoPWM.c **** #if (ServoPWM_UseStatus || ServoPWM_UsingFixedFunction)
 667:Generated_Source\PSoC5/ServoPWM.c **** 
 668:Generated_Source\PSoC5/ServoPWM.c **** 
 669:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_SetInterruptMode
 671:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/ServoPWM.c ****     *
 673:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 674:Generated_Source\PSoC5/ServoPWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/ServoPWM.c ****     *  source status register.
 676:Generated_Source\PSoC5/ServoPWM.c ****     *
 677:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 678:Generated_Source\PSoC5/ServoPWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 18


 679:Generated_Source\PSoC5/ServoPWM.c ****     *
 680:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 681:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 682:Generated_Source\PSoC5/ServoPWM.c ****     *
 683:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/ServoPWM.c ****     void ServoPWM_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/ServoPWM.c ****     {
 686:Generated_Source\PSoC5/ServoPWM.c ****         CY_SET_REG8(ServoPWM_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/ServoPWM.c ****     }
 688:Generated_Source\PSoC5/ServoPWM.c **** 
 689:Generated_Source\PSoC5/ServoPWM.c **** 
 690:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_ReadStatusRegister
 692:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/ServoPWM.c ****     *
 694:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 695:Generated_Source\PSoC5/ServoPWM.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/ServoPWM.c ****     *
 697:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 698:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 699:Generated_Source\PSoC5/ServoPWM.c ****     *
 700:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 701:Generated_Source\PSoC5/ServoPWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/ServoPWM.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/ServoPWM.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/ServoPWM.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/ServoPWM.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/ServoPWM.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/ServoPWM.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/ServoPWM.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/ServoPWM.c ****     *
 710:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/ServoPWM.c ****     uint8 ServoPWM_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/ServoPWM.c ****     {
 713:Generated_Source\PSoC5/ServoPWM.c ****         return (CY_GET_REG8(ServoPWM_STATUS_PTR));
 714:Generated_Source\PSoC5/ServoPWM.c ****     }
 715:Generated_Source\PSoC5/ServoPWM.c **** 
 716:Generated_Source\PSoC5/ServoPWM.c **** #endif /* (ServoPWM_UseStatus || ServoPWM_UsingFixedFunction) */
 717:Generated_Source\PSoC5/ServoPWM.c **** 
 718:Generated_Source\PSoC5/ServoPWM.c **** 
 719:Generated_Source\PSoC5/ServoPWM.c **** #if (ServoPWM_UseControl)
 720:Generated_Source\PSoC5/ServoPWM.c **** 
 721:Generated_Source\PSoC5/ServoPWM.c **** 
 722:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_ReadControlRegister
 724:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/ServoPWM.c ****     *
 726:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 727:Generated_Source\PSoC5/ServoPWM.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/ServoPWM.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/ServoPWM.c ****     *
 730:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 731:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 732:Generated_Source\PSoC5/ServoPWM.c ****     *
 733:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 734:Generated_Source\PSoC5/ServoPWM.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/ServoPWM.c ****     *
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 19


 736:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/ServoPWM.c ****     uint8 ServoPWM_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/ServoPWM.c ****     {
 279              		.loc 1 738 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 739:Generated_Source\PSoC5/ServoPWM.c ****         uint8 result;
 740:Generated_Source\PSoC5/ServoPWM.c **** 
 741:Generated_Source\PSoC5/ServoPWM.c ****         result = CY_GET_REG8(ServoPWM_CONTROL_PTR);
 284              		.loc 1 741 0
 285 0000 014B     		ldr	r3, .L29
 286 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 287              	.LVL10:
 742:Generated_Source\PSoC5/ServoPWM.c ****         return (result);
 743:Generated_Source\PSoC5/ServoPWM.c ****     }
 288              		.loc 1 743 0
 289 0004 7047     		bx	lr
 290              	.L30:
 291 0006 00BF     		.align	2
 292              	.L29:
 293 0008 7B650040 		.word	1073767803
 294              		.cfi_endproc
 295              	.LFE8:
 296              		.size	ServoPWM_ReadControlRegister, .-ServoPWM_ReadControlRegister
 297              		.section	.text.ServoPWM_WriteControlRegister,"ax",%progbits
 298              		.align	2
 299              		.global	ServoPWM_WriteControlRegister
 300              		.thumb
 301              		.thumb_func
 302              		.type	ServoPWM_WriteControlRegister, %function
 303              	ServoPWM_WriteControlRegister:
 304              	.LFB9:
 744:Generated_Source\PSoC5/ServoPWM.c **** 
 745:Generated_Source\PSoC5/ServoPWM.c **** 
 746:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_WriteControlRegister
 748:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/ServoPWM.c ****     *
 750:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 751:Generated_Source\PSoC5/ServoPWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/ServoPWM.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/ServoPWM.c ****     *
 754:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 755:Generated_Source\PSoC5/ServoPWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/ServoPWM.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/ServoPWM.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/ServoPWM.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/ServoPWM.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/ServoPWM.c ****     *
 761:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 762:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 763:Generated_Source\PSoC5/ServoPWM.c ****     *
 764:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/ServoPWM.c ****     void ServoPWM_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/ServoPWM.c ****     {
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 20


 305              		.loc 1 766 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310              	.LVL11:
 767:Generated_Source\PSoC5/ServoPWM.c ****         CY_SET_REG8(ServoPWM_CONTROL_PTR, control);
 311              		.loc 1 767 0
 312 0000 014B     		ldr	r3, .L32
 313 0002 1870     		strb	r0, [r3]
 314 0004 7047     		bx	lr
 315              	.L33:
 316 0006 00BF     		.align	2
 317              	.L32:
 318 0008 7B650040 		.word	1073767803
 319              		.cfi_endproc
 320              	.LFE9:
 321              		.size	ServoPWM_WriteControlRegister, .-ServoPWM_WriteControlRegister
 322              		.section	.text.ServoPWM_ReadCapture,"ax",%progbits
 323              		.align	2
 324              		.global	ServoPWM_ReadCapture
 325              		.thumb
 326              		.thumb_func
 327              		.type	ServoPWM_ReadCapture, %function
 328              	ServoPWM_ReadCapture:
 329              	.LFB10:
 768:Generated_Source\PSoC5/ServoPWM.c ****     }
 769:Generated_Source\PSoC5/ServoPWM.c **** 
 770:Generated_Source\PSoC5/ServoPWM.c **** #endif /* (ServoPWM_UseControl) */
 771:Generated_Source\PSoC5/ServoPWM.c **** 
 772:Generated_Source\PSoC5/ServoPWM.c **** 
 773:Generated_Source\PSoC5/ServoPWM.c **** #if (!ServoPWM_UsingFixedFunction)
 774:Generated_Source\PSoC5/ServoPWM.c **** 
 775:Generated_Source\PSoC5/ServoPWM.c **** 
 776:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_ReadCapture
 778:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/ServoPWM.c ****     *
 780:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 781:Generated_Source\PSoC5/ServoPWM.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/ServoPWM.c ****     *
 783:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 784:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 785:Generated_Source\PSoC5/ServoPWM.c ****     *
 786:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 787:Generated_Source\PSoC5/ServoPWM.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/ServoPWM.c ****     *
 789:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/ServoPWM.c ****     uint16 ServoPWM_ReadCapture(void) 
 791:Generated_Source\PSoC5/ServoPWM.c ****     {
 330              		.loc 1 791 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 792:Generated_Source\PSoC5/ServoPWM.c ****         return (CY_GET_REG16(ServoPWM_CAPTURE_LSB_PTR));
 335              		.loc 1 792 0
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 21


 336 0000 014B     		ldr	r3, .L35
 337 0002 1888     		ldrh	r0, [r3]
 793:Generated_Source\PSoC5/ServoPWM.c ****     }
 338              		.loc 1 793 0
 339 0004 80B2     		uxth	r0, r0
 340 0006 7047     		bx	lr
 341              	.L36:
 342              		.align	2
 343              	.L35:
 344 0008 B46A0040 		.word	1073769140
 345              		.cfi_endproc
 346              	.LFE10:
 347              		.size	ServoPWM_ReadCapture, .-ServoPWM_ReadCapture
 348              		.section	.text.ServoPWM_ReadCompare,"ax",%progbits
 349              		.align	2
 350              		.global	ServoPWM_ReadCompare
 351              		.thumb
 352              		.thumb_func
 353              		.type	ServoPWM_ReadCompare, %function
 354              	ServoPWM_ReadCompare:
 355              	.LFB11:
 794:Generated_Source\PSoC5/ServoPWM.c **** 
 795:Generated_Source\PSoC5/ServoPWM.c **** #endif /* (!ServoPWM_UsingFixedFunction) */
 796:Generated_Source\PSoC5/ServoPWM.c **** 
 797:Generated_Source\PSoC5/ServoPWM.c **** 
 798:Generated_Source\PSoC5/ServoPWM.c **** #if (ServoPWM_UseOneCompareMode)
 799:Generated_Source\PSoC5/ServoPWM.c **** 
 800:Generated_Source\PSoC5/ServoPWM.c **** 
 801:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_ReadCompare
 803:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/ServoPWM.c ****     *
 805:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 806:Generated_Source\PSoC5/ServoPWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/ServoPWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/ServoPWM.c ****     *
 809:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 810:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 811:Generated_Source\PSoC5/ServoPWM.c ****     *
 812:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 813:Generated_Source\PSoC5/ServoPWM.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/ServoPWM.c ****     *
 815:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/ServoPWM.c ****     uint16 ServoPWM_ReadCompare(void) 
 817:Generated_Source\PSoC5/ServoPWM.c ****     {
 356              		.loc 1 817 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 818:Generated_Source\PSoC5/ServoPWM.c ****         #if(ServoPWM_UsingFixedFunction)
 819:Generated_Source\PSoC5/ServoPWM.c ****             return ((uint16)CY_GET_REG16(ServoPWM_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/ServoPWM.c ****         #else
 821:Generated_Source\PSoC5/ServoPWM.c ****             return (CY_GET_REG16(ServoPWM_COMPARE1_LSB_PTR));
 361              		.loc 1 821 0
 362 0000 014B     		ldr	r3, .L38
 363 0002 1888     		ldrh	r0, [r3]
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 22


 822:Generated_Source\PSoC5/ServoPWM.c ****         #endif /* (ServoPWM_UsingFixedFunction) */
 823:Generated_Source\PSoC5/ServoPWM.c ****     }
 364              		.loc 1 823 0
 365 0004 80B2     		uxth	r0, r0
 366 0006 7047     		bx	lr
 367              	.L39:
 368              		.align	2
 369              	.L38:
 370 0008 546A0040 		.word	1073769044
 371              		.cfi_endproc
 372              	.LFE11:
 373              		.size	ServoPWM_ReadCompare, .-ServoPWM_ReadCompare
 374              		.section	.text.ServoPWM_ReadPeriod,"ax",%progbits
 375              		.align	2
 376              		.global	ServoPWM_ReadPeriod
 377              		.thumb
 378              		.thumb_func
 379              		.type	ServoPWM_ReadPeriod, %function
 380              	ServoPWM_ReadPeriod:
 381              	.LFB12:
 824:Generated_Source\PSoC5/ServoPWM.c **** 
 825:Generated_Source\PSoC5/ServoPWM.c **** #else
 826:Generated_Source\PSoC5/ServoPWM.c **** 
 827:Generated_Source\PSoC5/ServoPWM.c **** 
 828:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_ReadCompare1
 830:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/ServoPWM.c ****     *
 832:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 833:Generated_Source\PSoC5/ServoPWM.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/ServoPWM.c ****     *
 835:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 836:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 837:Generated_Source\PSoC5/ServoPWM.c ****     *
 838:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 839:Generated_Source\PSoC5/ServoPWM.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/ServoPWM.c ****     *
 841:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/ServoPWM.c ****     uint16 ServoPWM_ReadCompare1(void) 
 843:Generated_Source\PSoC5/ServoPWM.c ****     {
 844:Generated_Source\PSoC5/ServoPWM.c ****         return (CY_GET_REG16(ServoPWM_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/ServoPWM.c ****     }
 846:Generated_Source\PSoC5/ServoPWM.c **** 
 847:Generated_Source\PSoC5/ServoPWM.c **** 
 848:Generated_Source\PSoC5/ServoPWM.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/ServoPWM.c ****     * Function Name: ServoPWM_ReadCompare2
 850:Generated_Source\PSoC5/ServoPWM.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/ServoPWM.c ****     *
 852:Generated_Source\PSoC5/ServoPWM.c ****     * Summary:
 853:Generated_Source\PSoC5/ServoPWM.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/ServoPWM.c ****     *
 855:Generated_Source\PSoC5/ServoPWM.c ****     * Parameters:
 856:Generated_Source\PSoC5/ServoPWM.c ****     *  None
 857:Generated_Source\PSoC5/ServoPWM.c ****     *
 858:Generated_Source\PSoC5/ServoPWM.c ****     * Return:
 859:Generated_Source\PSoC5/ServoPWM.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/ServoPWM.c ****     *
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 23


 861:Generated_Source\PSoC5/ServoPWM.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/ServoPWM.c ****     uint16 ServoPWM_ReadCompare2(void) 
 863:Generated_Source\PSoC5/ServoPWM.c ****     {
 864:Generated_Source\PSoC5/ServoPWM.c ****         return (CY_GET_REG16(ServoPWM_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/ServoPWM.c ****     }
 866:Generated_Source\PSoC5/ServoPWM.c **** 
 867:Generated_Source\PSoC5/ServoPWM.c **** #endif /* (ServoPWM_UseOneCompareMode) */
 868:Generated_Source\PSoC5/ServoPWM.c **** 
 869:Generated_Source\PSoC5/ServoPWM.c **** 
 870:Generated_Source\PSoC5/ServoPWM.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/ServoPWM.c **** * Function Name: ServoPWM_ReadPeriod
 872:Generated_Source\PSoC5/ServoPWM.c **** ********************************************************************************
 873:Generated_Source\PSoC5/ServoPWM.c **** *
 874:Generated_Source\PSoC5/ServoPWM.c **** * Summary:
 875:Generated_Source\PSoC5/ServoPWM.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/ServoPWM.c **** *
 877:Generated_Source\PSoC5/ServoPWM.c **** * Parameters:
 878:Generated_Source\PSoC5/ServoPWM.c **** *  None
 879:Generated_Source\PSoC5/ServoPWM.c **** *
 880:Generated_Source\PSoC5/ServoPWM.c **** * Return:
 881:Generated_Source\PSoC5/ServoPWM.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/ServoPWM.c **** *
 883:Generated_Source\PSoC5/ServoPWM.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/ServoPWM.c **** uint16 ServoPWM_ReadPeriod(void) 
 885:Generated_Source\PSoC5/ServoPWM.c **** {
 382              		.loc 1 885 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 886:Generated_Source\PSoC5/ServoPWM.c ****     #if(ServoPWM_UsingFixedFunction)
 887:Generated_Source\PSoC5/ServoPWM.c ****         return ((uint16)CY_GET_REG16(ServoPWM_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/ServoPWM.c ****     #else
 889:Generated_Source\PSoC5/ServoPWM.c ****         return (CY_GET_REG16(ServoPWM_PERIOD_LSB_PTR));
 387              		.loc 1 889 0
 388 0000 014B     		ldr	r3, .L41
 389 0002 1888     		ldrh	r0, [r3]
 890:Generated_Source\PSoC5/ServoPWM.c ****     #endif /* (ServoPWM_UsingFixedFunction) */
 891:Generated_Source\PSoC5/ServoPWM.c **** }
 390              		.loc 1 891 0
 391 0004 80B2     		uxth	r0, r0
 392 0006 7047     		bx	lr
 393              	.L42:
 394              		.align	2
 395              	.L41:
 396 0008 946A0040 		.word	1073769108
 397              		.cfi_endproc
 398              	.LFE12:
 399              		.size	ServoPWM_ReadPeriod, .-ServoPWM_ReadPeriod
 400              		.global	ServoPWM_initVar
 401              		.bss
 402              		.set	.LANCHOR0,. + 0
 403              		.type	ServoPWM_initVar, %object
 404              		.size	ServoPWM_initVar, 1
 405              	ServoPWM_initVar:
 406 0000 00       		.space	1
 407              		.text
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 24


 408              	.Letext0:
 409              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 410              		.section	.debug_info,"",%progbits
 411              	.Ldebug_info0:
 412 0000 95020000 		.4byte	0x295
 413 0004 0400     		.2byte	0x4
 414 0006 00000000 		.4byte	.Ldebug_abbrev0
 415 000a 04       		.byte	0x4
 416 000b 01       		.uleb128 0x1
 417 000c 8F000000 		.4byte	.LASF36
 418 0010 0C       		.byte	0xc
 419 0011 5F000000 		.4byte	.LASF37
 420 0015 66010000 		.4byte	.LASF38
 421 0019 00000000 		.4byte	.Ldebug_ranges0+0
 422 001d 00000000 		.4byte	0
 423 0021 00000000 		.4byte	.Ldebug_line0
 424 0025 02       		.uleb128 0x2
 425 0026 01       		.byte	0x1
 426 0027 06       		.byte	0x6
 427 0028 CA020000 		.4byte	.LASF0
 428 002c 02       		.uleb128 0x2
 429 002d 01       		.byte	0x1
 430 002e 08       		.byte	0x8
 431 002f 81000000 		.4byte	.LASF1
 432 0033 02       		.uleb128 0x2
 433 0034 02       		.byte	0x2
 434 0035 05       		.byte	0x5
 435 0036 68020000 		.4byte	.LASF2
 436 003a 02       		.uleb128 0x2
 437 003b 02       		.byte	0x2
 438 003c 07       		.byte	0x7
 439 003d 1B000000 		.4byte	.LASF3
 440 0041 02       		.uleb128 0x2
 441 0042 04       		.byte	0x4
 442 0043 05       		.byte	0x5
 443 0044 97020000 		.4byte	.LASF4
 444 0048 02       		.uleb128 0x2
 445 0049 04       		.byte	0x4
 446 004a 07       		.byte	0x7
 447 004b 22010000 		.4byte	.LASF5
 448 004f 02       		.uleb128 0x2
 449 0050 08       		.byte	0x8
 450 0051 05       		.byte	0x5
 451 0052 55020000 		.4byte	.LASF6
 452 0056 02       		.uleb128 0x2
 453 0057 08       		.byte	0x8
 454 0058 07       		.byte	0x7
 455 0059 06020000 		.4byte	.LASF7
 456 005d 03       		.uleb128 0x3
 457 005e 04       		.byte	0x4
 458 005f 05       		.byte	0x5
 459 0060 696E7400 		.ascii	"int\000"
 460 0064 02       		.uleb128 0x2
 461 0065 04       		.byte	0x4
 462 0066 07       		.byte	0x7
 463 0067 E8010000 		.4byte	.LASF8
 464 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 25


 465 006c 34010000 		.4byte	.LASF9
 466 0070 02       		.byte	0x2
 467 0071 E901     		.2byte	0x1e9
 468 0073 2C000000 		.4byte	0x2c
 469 0077 04       		.uleb128 0x4
 470 0078 A1010000 		.4byte	.LASF10
 471 007c 02       		.byte	0x2
 472 007d EA01     		.2byte	0x1ea
 473 007f 3A000000 		.4byte	0x3a
 474 0083 02       		.uleb128 0x2
 475 0084 04       		.byte	0x4
 476 0085 04       		.byte	0x4
 477 0086 59000000 		.4byte	.LASF11
 478 008a 02       		.uleb128 0x2
 479 008b 08       		.byte	0x8
 480 008c 04       		.byte	0x4
 481 008d 5F010000 		.4byte	.LASF12
 482 0091 02       		.uleb128 0x2
 483 0092 01       		.byte	0x1
 484 0093 08       		.byte	0x8
 485 0094 63020000 		.4byte	.LASF13
 486 0098 04       		.uleb128 0x4
 487 0099 1D010000 		.4byte	.LASF14
 488 009d 02       		.byte	0x2
 489 009e 9302     		.2byte	0x293
 490 00a0 A4000000 		.4byte	0xa4
 491 00a4 05       		.uleb128 0x5
 492 00a5 6B000000 		.4byte	0x6b
 493 00a9 04       		.uleb128 0x4
 494 00aa 00000000 		.4byte	.LASF15
 495 00ae 02       		.byte	0x2
 496 00af 9402     		.2byte	0x294
 497 00b1 B5000000 		.4byte	0xb5
 498 00b5 05       		.uleb128 0x5
 499 00b6 77000000 		.4byte	0x77
 500 00ba 02       		.uleb128 0x2
 501 00bb 08       		.byte	0x8
 502 00bc 04       		.byte	0x4
 503 00bd BE020000 		.4byte	.LASF16
 504 00c1 02       		.uleb128 0x2
 505 00c2 04       		.byte	0x4
 506 00c3 07       		.byte	0x7
 507 00c4 4C020000 		.4byte	.LASF17
 508 00c8 06       		.uleb128 0x6
 509 00c9 87020000 		.4byte	.LASF18
 510 00cd 01       		.byte	0x1
 511 00ce C7       		.byte	0xc7
 512 00cf 00000000 		.4byte	.LFB2
 513 00d3 10000000 		.4byte	.LFE2-.LFB2
 514 00d7 01       		.uleb128 0x1
 515 00d8 9C       		.byte	0x9c
 516 00d9 06       		.uleb128 0x6
 517 00da A8010000 		.4byte	.LASF19
 518 00de 01       		.byte	0x1
 519 00df E9       		.byte	0xe9
 520 00e0 00000000 		.4byte	.LFB3
 521 00e4 10000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 26


 522 00e8 01       		.uleb128 0x1
 523 00e9 9C       		.byte	0x9c
 524 00ea 07       		.uleb128 0x7
 525 00eb 43000000 		.4byte	.LASF20
 526 00ef 01       		.byte	0x1
 527 00f0 9301     		.2byte	0x193
 528 00f2 00000000 		.4byte	.LFB4
 529 00f6 0C000000 		.4byte	.LFE4-.LFB4
 530 00fa 01       		.uleb128 0x1
 531 00fb 9C       		.byte	0x9c
 532 00fc 0F010000 		.4byte	0x10f
 533 0100 08       		.uleb128 0x8
 534 0101 57010000 		.4byte	.LASF22
 535 0105 01       		.byte	0x1
 536 0106 9301     		.2byte	0x193
 537 0108 77000000 		.4byte	0x77
 538 010c 01       		.uleb128 0x1
 539 010d 50       		.byte	0x50
 540 010e 00       		.byte	0
 541 010f 09       		.uleb128 0x9
 542 0110 B6010000 		.4byte	.LASF32
 543 0114 01       		.byte	0x1
 544 0115 A901     		.2byte	0x1a9
 545 0117 77000000 		.4byte	0x77
 546 011b 00000000 		.4byte	.LFB5
 547 011f 14000000 		.4byte	.LFE5-.LFB5
 548 0123 01       		.uleb128 0x1
 549 0124 9C       		.byte	0x9c
 550 0125 07       		.uleb128 0x7
 551 0126 72020000 		.4byte	.LASF21
 552 012a 01       		.byte	0x1
 553 012b E201     		.2byte	0x1e2
 554 012d 00000000 		.4byte	.LFB6
 555 0131 0C000000 		.4byte	.LFE6-.LFB6
 556 0135 01       		.uleb128 0x1
 557 0136 9C       		.byte	0x9c
 558 0137 4A010000 		.4byte	0x14a
 559 013b 08       		.uleb128 0x8
 560 013c 14000000 		.4byte	.LASF23
 561 0140 01       		.byte	0x1
 562 0141 E201     		.2byte	0x1e2
 563 0143 77000000 		.4byte	0x77
 564 0147 01       		.uleb128 0x1
 565 0148 50       		.byte	0x50
 566 0149 00       		.byte	0
 567 014a 07       		.uleb128 0x7
 568 014b DE020000 		.4byte	.LASF24
 569 014f 01       		.byte	0x1
 570 0150 0402     		.2byte	0x204
 571 0152 00000000 		.4byte	.LFB7
 572 0156 0C000000 		.4byte	.LFE7-.LFB7
 573 015a 01       		.uleb128 0x1
 574 015b 9C       		.byte	0x9c
 575 015c 6F010000 		.4byte	0x16f
 576 0160 08       		.uleb128 0x8
 577 0161 D6020000 		.4byte	.LASF25
 578 0165 01       		.byte	0x1
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 27


 579 0166 0402     		.2byte	0x204
 580 0168 77000000 		.4byte	0x77
 581 016c 01       		.uleb128 0x1
 582 016d 50       		.byte	0x50
 583 016e 00       		.byte	0
 584 016f 0A       		.uleb128 0xa
 585 0170 06000000 		.4byte	.LASF26
 586 0174 01       		.byte	0x1
 587 0175 54       		.byte	0x54
 588 0176 00000000 		.4byte	.LFB1
 589 017a 44000000 		.4byte	.LFE1-.LFB1
 590 017e 01       		.uleb128 0x1
 591 017f 9C       		.byte	0x9c
 592 0180 CF010000 		.4byte	0x1cf
 593 0184 0B       		.uleb128 0xb
 594 0185 47020000 		.4byte	.LASF28
 595 0189 01       		.byte	0x1
 596 018a 57       		.byte	0x57
 597 018b 6B000000 		.4byte	0x6b
 598 018f 00000000 		.4byte	.LLST0
 599 0193 0C       		.uleb128 0xc
 600 0194 2C000000 		.4byte	.LVL5
 601 0198 EA000000 		.4byte	0xea
 602 019c A8010000 		.4byte	0x1a8
 603 01a0 0D       		.uleb128 0xd
 604 01a1 01       		.uleb128 0x1
 605 01a2 50       		.byte	0x50
 606 01a3 03       		.uleb128 0x3
 607 01a4 0A       		.byte	0xa
 608 01a5 1F4E     		.2byte	0x4e1f
 609 01a7 00       		.byte	0
 610 01a8 0C       		.uleb128 0xc
 611 01a9 34000000 		.4byte	.LVL6
 612 01ad 25010000 		.4byte	0x125
 613 01b1 BD010000 		.4byte	0x1bd
 614 01b5 0D       		.uleb128 0xd
 615 01b6 01       		.uleb128 0x1
 616 01b7 50       		.byte	0x50
 617 01b8 03       		.uleb128 0x3
 618 01b9 0A       		.byte	0xa
 619 01ba 1F4E     		.2byte	0x4e1f
 620 01bc 00       		.byte	0
 621 01bd 0E       		.uleb128 0xe
 622 01be 3C000000 		.4byte	.LVL7
 623 01c2 4A010000 		.4byte	0x14a
 624 01c6 0D       		.uleb128 0xd
 625 01c7 01       		.uleb128 0x1
 626 01c8 50       		.byte	0x50
 627 01c9 03       		.uleb128 0x3
 628 01ca 0A       		.byte	0xa
 629 01cb DC05     		.2byte	0x5dc
 630 01cd 00       		.byte	0
 631 01ce 00       		.byte	0
 632 01cf 0A       		.uleb128 0xa
 633 01d0 24020000 		.4byte	.LASF27
 634 01d4 01       		.byte	0x1
 635 01d5 37       		.byte	0x37
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 28


 636 01d6 00000000 		.4byte	.LFB0
 637 01da 1C000000 		.4byte	.LFE0-.LFB0
 638 01de 01       		.uleb128 0x1
 639 01df 9C       		.byte	0x9c
 640 01e0 F7010000 		.4byte	0x1f7
 641 01e4 0F       		.uleb128 0xf
 642 01e5 0C000000 		.4byte	.LVL8
 643 01e9 6F010000 		.4byte	0x16f
 644 01ed 0F       		.uleb128 0xf
 645 01ee 16000000 		.4byte	.LVL9
 646 01f2 C8000000 		.4byte	0xc8
 647 01f6 00       		.byte	0
 648 01f7 10       		.uleb128 0x10
 649 01f8 CB010000 		.4byte	.LASF39
 650 01fc 01       		.byte	0x1
 651 01fd E102     		.2byte	0x2e1
 652 01ff 6B000000 		.4byte	0x6b
 653 0203 00000000 		.4byte	.LFB8
 654 0207 0C000000 		.4byte	.LFE8-.LFB8
 655 020b 01       		.uleb128 0x1
 656 020c 9C       		.byte	0x9c
 657 020d 20020000 		.4byte	0x220
 658 0211 11       		.uleb128 0x11
 659 0212 1D020000 		.4byte	.LASF29
 660 0216 01       		.byte	0x1
 661 0217 E302     		.2byte	0x2e3
 662 0219 6B000000 		.4byte	0x6b
 663 021d 01       		.uleb128 0x1
 664 021e 50       		.byte	0x50
 665 021f 00       		.byte	0
 666 0220 07       		.uleb128 0x7
 667 0221 A0020000 		.4byte	.LASF30
 668 0225 01       		.byte	0x1
 669 0226 FD02     		.2byte	0x2fd
 670 0228 00000000 		.4byte	.LFB9
 671 022c 0C000000 		.4byte	.LFE9-.LFB9
 672 0230 01       		.uleb128 0x1
 673 0231 9C       		.byte	0x9c
 674 0232 45020000 		.4byte	0x245
 675 0236 08       		.uleb128 0x8
 676 0237 3A010000 		.4byte	.LASF31
 677 023b 01       		.byte	0x1
 678 023c FD02     		.2byte	0x2fd
 679 023e 6B000000 		.4byte	0x6b
 680 0242 01       		.uleb128 0x1
 681 0243 50       		.byte	0x50
 682 0244 00       		.byte	0
 683 0245 09       		.uleb128 0x9
 684 0246 42010000 		.4byte	.LASF33
 685 024a 01       		.byte	0x1
 686 024b 1603     		.2byte	0x316
 687 024d 77000000 		.4byte	0x77
 688 0251 00000000 		.4byte	.LFB10
 689 0255 0C000000 		.4byte	.LFE10-.LFB10
 690 0259 01       		.uleb128 0x1
 691 025a 9C       		.byte	0x9c
 692 025b 09       		.uleb128 0x9
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 29


 693 025c 2E000000 		.4byte	.LASF34
 694 0260 01       		.byte	0x1
 695 0261 3003     		.2byte	0x330
 696 0263 77000000 		.4byte	0x77
 697 0267 00000000 		.4byte	.LFB11
 698 026b 0C000000 		.4byte	.LFE11-.LFB11
 699 026f 01       		.uleb128 0x1
 700 0270 9C       		.byte	0x9c
 701 0271 09       		.uleb128 0x9
 702 0272 33020000 		.4byte	.LASF35
 703 0276 01       		.byte	0x1
 704 0277 7403     		.2byte	0x374
 705 0279 77000000 		.4byte	0x77
 706 027d 00000000 		.4byte	.LFB12
 707 0281 0C000000 		.4byte	.LFE12-.LFB12
 708 0285 01       		.uleb128 0x1
 709 0286 9C       		.byte	0x9c
 710 0287 12       		.uleb128 0x12
 711 0288 F5010000 		.4byte	.LASF40
 712 028c 01       		.byte	0x1
 713 028d 20       		.byte	0x20
 714 028e 6B000000 		.4byte	0x6b
 715 0292 05       		.uleb128 0x5
 716 0293 03       		.byte	0x3
 717 0294 00000000 		.4byte	ServoPWM_initVar
 718 0298 00       		.byte	0
 719              		.section	.debug_abbrev,"",%progbits
 720              	.Ldebug_abbrev0:
 721 0000 01       		.uleb128 0x1
 722 0001 11       		.uleb128 0x11
 723 0002 01       		.byte	0x1
 724 0003 25       		.uleb128 0x25
 725 0004 0E       		.uleb128 0xe
 726 0005 13       		.uleb128 0x13
 727 0006 0B       		.uleb128 0xb
 728 0007 03       		.uleb128 0x3
 729 0008 0E       		.uleb128 0xe
 730 0009 1B       		.uleb128 0x1b
 731 000a 0E       		.uleb128 0xe
 732 000b 55       		.uleb128 0x55
 733 000c 17       		.uleb128 0x17
 734 000d 11       		.uleb128 0x11
 735 000e 01       		.uleb128 0x1
 736 000f 10       		.uleb128 0x10
 737 0010 17       		.uleb128 0x17
 738 0011 00       		.byte	0
 739 0012 00       		.byte	0
 740 0013 02       		.uleb128 0x2
 741 0014 24       		.uleb128 0x24
 742 0015 00       		.byte	0
 743 0016 0B       		.uleb128 0xb
 744 0017 0B       		.uleb128 0xb
 745 0018 3E       		.uleb128 0x3e
 746 0019 0B       		.uleb128 0xb
 747 001a 03       		.uleb128 0x3
 748 001b 0E       		.uleb128 0xe
 749 001c 00       		.byte	0
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 30


 750 001d 00       		.byte	0
 751 001e 03       		.uleb128 0x3
 752 001f 24       		.uleb128 0x24
 753 0020 00       		.byte	0
 754 0021 0B       		.uleb128 0xb
 755 0022 0B       		.uleb128 0xb
 756 0023 3E       		.uleb128 0x3e
 757 0024 0B       		.uleb128 0xb
 758 0025 03       		.uleb128 0x3
 759 0026 08       		.uleb128 0x8
 760 0027 00       		.byte	0
 761 0028 00       		.byte	0
 762 0029 04       		.uleb128 0x4
 763 002a 16       		.uleb128 0x16
 764 002b 00       		.byte	0
 765 002c 03       		.uleb128 0x3
 766 002d 0E       		.uleb128 0xe
 767 002e 3A       		.uleb128 0x3a
 768 002f 0B       		.uleb128 0xb
 769 0030 3B       		.uleb128 0x3b
 770 0031 05       		.uleb128 0x5
 771 0032 49       		.uleb128 0x49
 772 0033 13       		.uleb128 0x13
 773 0034 00       		.byte	0
 774 0035 00       		.byte	0
 775 0036 05       		.uleb128 0x5
 776 0037 35       		.uleb128 0x35
 777 0038 00       		.byte	0
 778 0039 49       		.uleb128 0x49
 779 003a 13       		.uleb128 0x13
 780 003b 00       		.byte	0
 781 003c 00       		.byte	0
 782 003d 06       		.uleb128 0x6
 783 003e 2E       		.uleb128 0x2e
 784 003f 00       		.byte	0
 785 0040 3F       		.uleb128 0x3f
 786 0041 19       		.uleb128 0x19
 787 0042 03       		.uleb128 0x3
 788 0043 0E       		.uleb128 0xe
 789 0044 3A       		.uleb128 0x3a
 790 0045 0B       		.uleb128 0xb
 791 0046 3B       		.uleb128 0x3b
 792 0047 0B       		.uleb128 0xb
 793 0048 27       		.uleb128 0x27
 794 0049 19       		.uleb128 0x19
 795 004a 11       		.uleb128 0x11
 796 004b 01       		.uleb128 0x1
 797 004c 12       		.uleb128 0x12
 798 004d 06       		.uleb128 0x6
 799 004e 40       		.uleb128 0x40
 800 004f 18       		.uleb128 0x18
 801 0050 9742     		.uleb128 0x2117
 802 0052 19       		.uleb128 0x19
 803 0053 00       		.byte	0
 804 0054 00       		.byte	0
 805 0055 07       		.uleb128 0x7
 806 0056 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 31


 807 0057 01       		.byte	0x1
 808 0058 3F       		.uleb128 0x3f
 809 0059 19       		.uleb128 0x19
 810 005a 03       		.uleb128 0x3
 811 005b 0E       		.uleb128 0xe
 812 005c 3A       		.uleb128 0x3a
 813 005d 0B       		.uleb128 0xb
 814 005e 3B       		.uleb128 0x3b
 815 005f 05       		.uleb128 0x5
 816 0060 27       		.uleb128 0x27
 817 0061 19       		.uleb128 0x19
 818 0062 11       		.uleb128 0x11
 819 0063 01       		.uleb128 0x1
 820 0064 12       		.uleb128 0x12
 821 0065 06       		.uleb128 0x6
 822 0066 40       		.uleb128 0x40
 823 0067 18       		.uleb128 0x18
 824 0068 9742     		.uleb128 0x2117
 825 006a 19       		.uleb128 0x19
 826 006b 01       		.uleb128 0x1
 827 006c 13       		.uleb128 0x13
 828 006d 00       		.byte	0
 829 006e 00       		.byte	0
 830 006f 08       		.uleb128 0x8
 831 0070 05       		.uleb128 0x5
 832 0071 00       		.byte	0
 833 0072 03       		.uleb128 0x3
 834 0073 0E       		.uleb128 0xe
 835 0074 3A       		.uleb128 0x3a
 836 0075 0B       		.uleb128 0xb
 837 0076 3B       		.uleb128 0x3b
 838 0077 05       		.uleb128 0x5
 839 0078 49       		.uleb128 0x49
 840 0079 13       		.uleb128 0x13
 841 007a 02       		.uleb128 0x2
 842 007b 18       		.uleb128 0x18
 843 007c 00       		.byte	0
 844 007d 00       		.byte	0
 845 007e 09       		.uleb128 0x9
 846 007f 2E       		.uleb128 0x2e
 847 0080 00       		.byte	0
 848 0081 3F       		.uleb128 0x3f
 849 0082 19       		.uleb128 0x19
 850 0083 03       		.uleb128 0x3
 851 0084 0E       		.uleb128 0xe
 852 0085 3A       		.uleb128 0x3a
 853 0086 0B       		.uleb128 0xb
 854 0087 3B       		.uleb128 0x3b
 855 0088 05       		.uleb128 0x5
 856 0089 27       		.uleb128 0x27
 857 008a 19       		.uleb128 0x19
 858 008b 49       		.uleb128 0x49
 859 008c 13       		.uleb128 0x13
 860 008d 11       		.uleb128 0x11
 861 008e 01       		.uleb128 0x1
 862 008f 12       		.uleb128 0x12
 863 0090 06       		.uleb128 0x6
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 32


 864 0091 40       		.uleb128 0x40
 865 0092 18       		.uleb128 0x18
 866 0093 9742     		.uleb128 0x2117
 867 0095 19       		.uleb128 0x19
 868 0096 00       		.byte	0
 869 0097 00       		.byte	0
 870 0098 0A       		.uleb128 0xa
 871 0099 2E       		.uleb128 0x2e
 872 009a 01       		.byte	0x1
 873 009b 3F       		.uleb128 0x3f
 874 009c 19       		.uleb128 0x19
 875 009d 03       		.uleb128 0x3
 876 009e 0E       		.uleb128 0xe
 877 009f 3A       		.uleb128 0x3a
 878 00a0 0B       		.uleb128 0xb
 879 00a1 3B       		.uleb128 0x3b
 880 00a2 0B       		.uleb128 0xb
 881 00a3 27       		.uleb128 0x27
 882 00a4 19       		.uleb128 0x19
 883 00a5 11       		.uleb128 0x11
 884 00a6 01       		.uleb128 0x1
 885 00a7 12       		.uleb128 0x12
 886 00a8 06       		.uleb128 0x6
 887 00a9 40       		.uleb128 0x40
 888 00aa 18       		.uleb128 0x18
 889 00ab 9742     		.uleb128 0x2117
 890 00ad 19       		.uleb128 0x19
 891 00ae 01       		.uleb128 0x1
 892 00af 13       		.uleb128 0x13
 893 00b0 00       		.byte	0
 894 00b1 00       		.byte	0
 895 00b2 0B       		.uleb128 0xb
 896 00b3 34       		.uleb128 0x34
 897 00b4 00       		.byte	0
 898 00b5 03       		.uleb128 0x3
 899 00b6 0E       		.uleb128 0xe
 900 00b7 3A       		.uleb128 0x3a
 901 00b8 0B       		.uleb128 0xb
 902 00b9 3B       		.uleb128 0x3b
 903 00ba 0B       		.uleb128 0xb
 904 00bb 49       		.uleb128 0x49
 905 00bc 13       		.uleb128 0x13
 906 00bd 02       		.uleb128 0x2
 907 00be 17       		.uleb128 0x17
 908 00bf 00       		.byte	0
 909 00c0 00       		.byte	0
 910 00c1 0C       		.uleb128 0xc
 911 00c2 898201   		.uleb128 0x4109
 912 00c5 01       		.byte	0x1
 913 00c6 11       		.uleb128 0x11
 914 00c7 01       		.uleb128 0x1
 915 00c8 31       		.uleb128 0x31
 916 00c9 13       		.uleb128 0x13
 917 00ca 01       		.uleb128 0x1
 918 00cb 13       		.uleb128 0x13
 919 00cc 00       		.byte	0
 920 00cd 00       		.byte	0
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 33


 921 00ce 0D       		.uleb128 0xd
 922 00cf 8A8201   		.uleb128 0x410a
 923 00d2 00       		.byte	0
 924 00d3 02       		.uleb128 0x2
 925 00d4 18       		.uleb128 0x18
 926 00d5 9142     		.uleb128 0x2111
 927 00d7 18       		.uleb128 0x18
 928 00d8 00       		.byte	0
 929 00d9 00       		.byte	0
 930 00da 0E       		.uleb128 0xe
 931 00db 898201   		.uleb128 0x4109
 932 00de 01       		.byte	0x1
 933 00df 11       		.uleb128 0x11
 934 00e0 01       		.uleb128 0x1
 935 00e1 31       		.uleb128 0x31
 936 00e2 13       		.uleb128 0x13
 937 00e3 00       		.byte	0
 938 00e4 00       		.byte	0
 939 00e5 0F       		.uleb128 0xf
 940 00e6 898201   		.uleb128 0x4109
 941 00e9 00       		.byte	0
 942 00ea 11       		.uleb128 0x11
 943 00eb 01       		.uleb128 0x1
 944 00ec 31       		.uleb128 0x31
 945 00ed 13       		.uleb128 0x13
 946 00ee 00       		.byte	0
 947 00ef 00       		.byte	0
 948 00f0 10       		.uleb128 0x10
 949 00f1 2E       		.uleb128 0x2e
 950 00f2 01       		.byte	0x1
 951 00f3 3F       		.uleb128 0x3f
 952 00f4 19       		.uleb128 0x19
 953 00f5 03       		.uleb128 0x3
 954 00f6 0E       		.uleb128 0xe
 955 00f7 3A       		.uleb128 0x3a
 956 00f8 0B       		.uleb128 0xb
 957 00f9 3B       		.uleb128 0x3b
 958 00fa 05       		.uleb128 0x5
 959 00fb 27       		.uleb128 0x27
 960 00fc 19       		.uleb128 0x19
 961 00fd 49       		.uleb128 0x49
 962 00fe 13       		.uleb128 0x13
 963 00ff 11       		.uleb128 0x11
 964 0100 01       		.uleb128 0x1
 965 0101 12       		.uleb128 0x12
 966 0102 06       		.uleb128 0x6
 967 0103 40       		.uleb128 0x40
 968 0104 18       		.uleb128 0x18
 969 0105 9742     		.uleb128 0x2117
 970 0107 19       		.uleb128 0x19
 971 0108 01       		.uleb128 0x1
 972 0109 13       		.uleb128 0x13
 973 010a 00       		.byte	0
 974 010b 00       		.byte	0
 975 010c 11       		.uleb128 0x11
 976 010d 34       		.uleb128 0x34
 977 010e 00       		.byte	0
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 34


 978 010f 03       		.uleb128 0x3
 979 0110 0E       		.uleb128 0xe
 980 0111 3A       		.uleb128 0x3a
 981 0112 0B       		.uleb128 0xb
 982 0113 3B       		.uleb128 0x3b
 983 0114 05       		.uleb128 0x5
 984 0115 49       		.uleb128 0x49
 985 0116 13       		.uleb128 0x13
 986 0117 02       		.uleb128 0x2
 987 0118 18       		.uleb128 0x18
 988 0119 00       		.byte	0
 989 011a 00       		.byte	0
 990 011b 12       		.uleb128 0x12
 991 011c 34       		.uleb128 0x34
 992 011d 00       		.byte	0
 993 011e 03       		.uleb128 0x3
 994 011f 0E       		.uleb128 0xe
 995 0120 3A       		.uleb128 0x3a
 996 0121 0B       		.uleb128 0xb
 997 0122 3B       		.uleb128 0x3b
 998 0123 0B       		.uleb128 0xb
 999 0124 49       		.uleb128 0x49
 1000 0125 13       		.uleb128 0x13
 1001 0126 3F       		.uleb128 0x3f
 1002 0127 19       		.uleb128 0x19
 1003 0128 02       		.uleb128 0x2
 1004 0129 18       		.uleb128 0x18
 1005 012a 00       		.byte	0
 1006 012b 00       		.byte	0
 1007 012c 00       		.byte	0
 1008              		.section	.debug_loc,"",%progbits
 1009              	.Ldebug_loc0:
 1010              	.LLST0:
 1011 0000 0A000000 		.4byte	.LVL3
 1012 0004 0E000000 		.4byte	.LVL4
 1013 0008 0100     		.2byte	0x1
 1014 000a 53       		.byte	0x53
 1015 000b 00000000 		.4byte	0
 1016 000f 00000000 		.4byte	0
 1017              		.section	.debug_aranges,"",%progbits
 1018 0000 7C000000 		.4byte	0x7c
 1019 0004 0200     		.2byte	0x2
 1020 0006 00000000 		.4byte	.Ldebug_info0
 1021 000a 04       		.byte	0x4
 1022 000b 00       		.byte	0
 1023 000c 0000     		.2byte	0
 1024 000e 0000     		.2byte	0
 1025 0010 00000000 		.4byte	.LFB2
 1026 0014 10000000 		.4byte	.LFE2-.LFB2
 1027 0018 00000000 		.4byte	.LFB3
 1028 001c 10000000 		.4byte	.LFE3-.LFB3
 1029 0020 00000000 		.4byte	.LFB4
 1030 0024 0C000000 		.4byte	.LFE4-.LFB4
 1031 0028 00000000 		.4byte	.LFB5
 1032 002c 14000000 		.4byte	.LFE5-.LFB5
 1033 0030 00000000 		.4byte	.LFB6
 1034 0034 0C000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 35


 1035 0038 00000000 		.4byte	.LFB7
 1036 003c 0C000000 		.4byte	.LFE7-.LFB7
 1037 0040 00000000 		.4byte	.LFB1
 1038 0044 44000000 		.4byte	.LFE1-.LFB1
 1039 0048 00000000 		.4byte	.LFB0
 1040 004c 1C000000 		.4byte	.LFE0-.LFB0
 1041 0050 00000000 		.4byte	.LFB8
 1042 0054 0C000000 		.4byte	.LFE8-.LFB8
 1043 0058 00000000 		.4byte	.LFB9
 1044 005c 0C000000 		.4byte	.LFE9-.LFB9
 1045 0060 00000000 		.4byte	.LFB10
 1046 0064 0C000000 		.4byte	.LFE10-.LFB10
 1047 0068 00000000 		.4byte	.LFB11
 1048 006c 0C000000 		.4byte	.LFE11-.LFB11
 1049 0070 00000000 		.4byte	.LFB12
 1050 0074 0C000000 		.4byte	.LFE12-.LFB12
 1051 0078 00000000 		.4byte	0
 1052 007c 00000000 		.4byte	0
 1053              		.section	.debug_ranges,"",%progbits
 1054              	.Ldebug_ranges0:
 1055 0000 00000000 		.4byte	.LFB2
 1056 0004 10000000 		.4byte	.LFE2
 1057 0008 00000000 		.4byte	.LFB3
 1058 000c 10000000 		.4byte	.LFE3
 1059 0010 00000000 		.4byte	.LFB4
 1060 0014 0C000000 		.4byte	.LFE4
 1061 0018 00000000 		.4byte	.LFB5
 1062 001c 14000000 		.4byte	.LFE5
 1063 0020 00000000 		.4byte	.LFB6
 1064 0024 0C000000 		.4byte	.LFE6
 1065 0028 00000000 		.4byte	.LFB7
 1066 002c 0C000000 		.4byte	.LFE7
 1067 0030 00000000 		.4byte	.LFB1
 1068 0034 44000000 		.4byte	.LFE1
 1069 0038 00000000 		.4byte	.LFB0
 1070 003c 1C000000 		.4byte	.LFE0
 1071 0040 00000000 		.4byte	.LFB8
 1072 0044 0C000000 		.4byte	.LFE8
 1073 0048 00000000 		.4byte	.LFB9
 1074 004c 0C000000 		.4byte	.LFE9
 1075 0050 00000000 		.4byte	.LFB10
 1076 0054 0C000000 		.4byte	.LFE10
 1077 0058 00000000 		.4byte	.LFB11
 1078 005c 0C000000 		.4byte	.LFE11
 1079 0060 00000000 		.4byte	.LFB12
 1080 0064 0C000000 		.4byte	.LFE12
 1081 0068 00000000 		.4byte	0
 1082 006c 00000000 		.4byte	0
 1083              		.section	.debug_line,"",%progbits
 1084              	.Ldebug_line0:
 1085 0000 3C010000 		.section	.debug_str,"MS",%progbits,1
 1085      02004500 
 1085      00000201 
 1085      FB0E0D00 
 1085      01010101 
 1086              	.LASF15:
 1087 0000 72656731 		.ascii	"reg16\000"
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 36


 1087      3600
 1088              	.LASF26:
 1089 0006 53657276 		.ascii	"ServoPWM_Init\000"
 1089      6F50574D 
 1089      5F496E69 
 1089      7400
 1090              	.LASF23:
 1091 0014 70657269 		.ascii	"period\000"
 1091      6F6400
 1092              	.LASF3:
 1093 001b 73686F72 		.ascii	"short unsigned int\000"
 1093      7420756E 
 1093      7369676E 
 1093      65642069 
 1093      6E7400
 1094              	.LASF34:
 1095 002e 53657276 		.ascii	"ServoPWM_ReadCompare\000"
 1095      6F50574D 
 1095      5F526561 
 1095      64436F6D 
 1095      70617265 
 1096              	.LASF20:
 1097 0043 53657276 		.ascii	"ServoPWM_WriteCounter\000"
 1097      6F50574D 
 1097      5F577269 
 1097      7465436F 
 1097      756E7465 
 1098              	.LASF11:
 1099 0059 666C6F61 		.ascii	"float\000"
 1099      7400
 1100              	.LASF37:
 1101 005f 47656E65 		.ascii	"Generated_Source\\PSoC5\\ServoPWM.c\000"
 1101      72617465 
 1101      645F536F 
 1101      75726365 
 1101      5C50536F 
 1102              	.LASF1:
 1103 0081 756E7369 		.ascii	"unsigned char\000"
 1103      676E6564 
 1103      20636861 
 1103      7200
 1104              	.LASF36:
 1105 008f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1105      43313120 
 1105      352E342E 
 1105      31203230 
 1105      31363036 
 1106 00c2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1106      20726576 
 1106      6973696F 
 1106      6E203233 
 1106      37373135 
 1107 00f5 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1107      66756E63 
 1107      74696F6E 
 1107      2D736563 
 1107      74696F6E 
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 37


 1108              	.LASF14:
 1109 011d 72656738 		.ascii	"reg8\000"
 1109      00
 1110              	.LASF5:
 1111 0122 6C6F6E67 		.ascii	"long unsigned int\000"
 1111      20756E73 
 1111      69676E65 
 1111      6420696E 
 1111      7400
 1112              	.LASF9:
 1113 0134 75696E74 		.ascii	"uint8\000"
 1113      3800
 1114              	.LASF31:
 1115 013a 636F6E74 		.ascii	"control\000"
 1115      726F6C00 
 1116              	.LASF33:
 1117 0142 53657276 		.ascii	"ServoPWM_ReadCapture\000"
 1117      6F50574D 
 1117      5F526561 
 1117      64436170 
 1117      74757265 
 1118              	.LASF22:
 1119 0157 636F756E 		.ascii	"counter\000"
 1119      74657200 
 1120              	.LASF12:
 1121 015f 646F7562 		.ascii	"double\000"
 1121      6C6500
 1122              	.LASF38:
 1123 0166 433A5C47 		.ascii	"C:\\GIT\\RoboMate\\PSoC\\Microcontroller\\Microcont"
 1123      49545C52 
 1123      6F626F4D 
 1123      6174655C 
 1123      50536F43 
 1124 0194 726F6C6C 		.ascii	"roller.cydsn\000"
 1124      65722E63 
 1124      7964736E 
 1124      00
 1125              	.LASF10:
 1126 01a1 75696E74 		.ascii	"uint16\000"
 1126      313600
 1127              	.LASF19:
 1128 01a8 53657276 		.ascii	"ServoPWM_Stop\000"
 1128      6F50574D 
 1128      5F53746F 
 1128      7000
 1129              	.LASF32:
 1130 01b6 53657276 		.ascii	"ServoPWM_ReadCounter\000"
 1130      6F50574D 
 1130      5F526561 
 1130      64436F75 
 1130      6E746572 
 1131              	.LASF39:
 1132 01cb 53657276 		.ascii	"ServoPWM_ReadControlRegister\000"
 1132      6F50574D 
 1132      5F526561 
 1132      64436F6E 
 1132      74726F6C 
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 38


 1133              	.LASF8:
 1134 01e8 756E7369 		.ascii	"unsigned int\000"
 1134      676E6564 
 1134      20696E74 
 1134      00
 1135              	.LASF40:
 1136 01f5 53657276 		.ascii	"ServoPWM_initVar\000"
 1136      6F50574D 
 1136      5F696E69 
 1136      74566172 
 1136      00
 1137              	.LASF7:
 1138 0206 6C6F6E67 		.ascii	"long long unsigned int\000"
 1138      206C6F6E 
 1138      6720756E 
 1138      7369676E 
 1138      65642069 
 1139              	.LASF29:
 1140 021d 72657375 		.ascii	"result\000"
 1140      6C7400
 1141              	.LASF27:
 1142 0224 53657276 		.ascii	"ServoPWM_Start\000"
 1142      6F50574D 
 1142      5F537461 
 1142      727400
 1143              	.LASF35:
 1144 0233 53657276 		.ascii	"ServoPWM_ReadPeriod\000"
 1144      6F50574D 
 1144      5F526561 
 1144      64506572 
 1144      696F6400 
 1145              	.LASF28:
 1146 0247 6374726C 		.ascii	"ctrl\000"
 1146      00
 1147              	.LASF17:
 1148 024c 73697A65 		.ascii	"sizetype\000"
 1148      74797065 
 1148      00
 1149              	.LASF6:
 1150 0255 6C6F6E67 		.ascii	"long long int\000"
 1150      206C6F6E 
 1150      6720696E 
 1150      7400
 1151              	.LASF13:
 1152 0263 63686172 		.ascii	"char\000"
 1152      00
 1153              	.LASF2:
 1154 0268 73686F72 		.ascii	"short int\000"
 1154      7420696E 
 1154      7400
 1155              	.LASF21:
 1156 0272 53657276 		.ascii	"ServoPWM_WritePeriod\000"
 1156      6F50574D 
 1156      5F577269 
 1156      74655065 
 1156      72696F64 
 1157              	.LASF18:
ARM GAS  C:\Users\Simon\AppData\Local\Temp\cchcDrrQ.s 			page 39


 1158 0287 53657276 		.ascii	"ServoPWM_Enable\000"
 1158      6F50574D 
 1158      5F456E61 
 1158      626C6500 
 1159              	.LASF4:
 1160 0297 6C6F6E67 		.ascii	"long int\000"
 1160      20696E74 
 1160      00
 1161              	.LASF30:
 1162 02a0 53657276 		.ascii	"ServoPWM_WriteControlRegister\000"
 1162      6F50574D 
 1162      5F577269 
 1162      7465436F 
 1162      6E74726F 
 1163              	.LASF16:
 1164 02be 6C6F6E67 		.ascii	"long double\000"
 1164      20646F75 
 1164      626C6500 
 1165              	.LASF0:
 1166 02ca 7369676E 		.ascii	"signed char\000"
 1166      65642063 
 1166      68617200 
 1167              	.LASF25:
 1168 02d6 636F6D70 		.ascii	"compare\000"
 1168      61726500 
 1169              	.LASF24:
 1170 02de 53657276 		.ascii	"ServoPWM_WriteCompare\000"
 1170      6F50574D 
 1170      5F577269 
 1170      7465436F 
 1170      6D706172 
 1171              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
